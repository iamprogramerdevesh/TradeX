{"version":3,"file":"static/js/77.9df6998f.chunk.js","mappings":"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","sources":["components/common/buttons/index.jsx","components/common/statusPill/index.jsx","components/common/table/columns.jsx","components/common/table/index.jsx","helpers/format.js","pages/settings/index.jsx","pages/settings/tabs/import.jsx"],"sourcesContent":["import React, { forwardRef } from \"react\"\r\n\r\nexport const Button = forwardRef(({ className, ...props }, ref) => (\r\n\r\n    <button\r\n    className=\"w-full px-5 py-2.5 text-sm sm:text-base font-medium text-center text-white bg-brand-300 rounded-lg hover:bg-brand-200\"\r\n    ref={ref}\r\n    {...props}></button>\r\n\r\n));\r\n\r\nexport const SubmitButton = forwardRef(({ className, ...props }, ref) => (\r\n\r\n    <button\r\n    type=\"submit\"\r\n    className=\"inline-flex items-center px-5 py-2 text-sm font-medium text-center text-white bg-brand-300 rounded-lg hover:bg-brand-200\"\r\n    ref={ref}\r\n    {...props}></button>\r\n\r\n));\r\n\r\nexport const DeleteButton = forwardRef(({ className, ...props }, ref) => (\r\n\r\n    <button\r\n    type=\"submit\"\r\n    className=\"inline-flex items-center px-5 py-2.5 text-sm font-medium text-center text-red border border-red rounded-lg hover:bg-red hover:text-white\"\r\n    ref={ref}\r\n    {...props}></button>\r\n\r\n));\r\n\r\nexport const ResetButton = forwardRef(({ className, ...props }, ref) => (\r\n\r\n    <button\r\n    type=\"reset\" \r\n    className=\"inline-flex items-center px-5 py-2 mr-4 text-sm font-medium text-center text-white bg-gray-500 rounded-lg hover:bg-gray-600\"\r\n    ref={ref}\r\n    {...props}></button>\r\n\r\n));\r\n\r\nexport const IconButton = forwardRef(({ className, ...props }, ref) => (\r\n\r\n    <button\r\n    type=\"button\" \r\n    className={`bg-white hover:bg-gray-200 dark:bg-main-dark dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white font-medium rounded-lg text-sm px-4 py-2 text-center inline-flex justify-between items-center shadow-md m-2`}\r\n    ref={ref}\r\n    {...props}></button>\r\n\r\n));\r\n","import React from 'react'\r\nimport { classNames } from \"utils\";\r\n\r\nconst StatusPill = (props) => {\r\n    const { value } = props;\r\n    const status = value?.toLowerCase() || '';\r\n\r\n    return (\r\n        <span\r\n            className={\r\n                classNames(\r\n                    \"px-3 py-1 uppercase leading-wide font-bold text-xs rounded-xl shadow-sm\",\r\n                    status.startsWith(\"win\") ? \"border-2 border-green text-green\" : null,\r\n                    status.startsWith(\"pending\") ? \"bg-yellow-100 text-yellow-800\" : null,\r\n                    status.startsWith(\"loss\") ? \"border-2 border-red text-red\" : null,\r\n                )\r\n            }\r\n        >\r\n            {status}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default StatusPill;\r\n","import { classNames } from \"utils\";\r\nimport StatusPill from \"components/common/statusPill\";\r\nimport { formatDate } from \"utils\";\r\nimport { GetFormatedCurrency, GetFormatedPnl } from \"helpers/format\";\r\n\r\nexport const RecentTradeCols = [\r\n    {\r\n        accessorKey: \"Symbol\",\r\n        header: () => <span>Symbol</span>,\r\n        cell: ({ row }) => <div className=\"uppercase\">{row.getValue(\"Symbol\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"TradeStatus\",\r\n        header: () => <span>Status</span>,\r\n        cell: ({ row }) => (\r\n            <div className=\"capitalize\">\r\n                <StatusPill value={row.getValue(\"TradeStatus\")} />\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        accessorKey: \"EntryDate\",\r\n        header: () => <div className=\"capitalize\">Open Date</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{formatDate(row.getValue(\"EntryDate\"), 'dd/mm/yyyy')}</div>\r\n    },\r\n    {\r\n        accessorKey: \"ExitDate\",\r\n        header: () => <div className=\"capitalize\">Close Date</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{formatDate(row.getValue(\"ExitDate\"), 'dd/mm/yyyy')}</div>\r\n    },\r\n    {\r\n        accessorKey: \"Action\",\r\n        header: () => <div className=\"capitalize\">Action</div>,\r\n        cell: ({ row }) => <div className=\"uppercase\">{row.getValue(\"Action\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"NetPnL\",\r\n        header: () => <div className=\"capitalize text-center\">Net P&L</div>,\r\n        cell: ({ row }) => <div className=\"text-center whitespace-nowrap capitalize font-medium\"><GetFormatedPnl value={row.getValue(\"NetPnL\")} /></div>\r\n    },\r\n    {\r\n        accessorKey: \"NetRoi\",\r\n        header: () => <div className=\"capitalize text-center\">Net ROI</div>,\r\n        cell: ({ row }) => <div className=\"text-center whitespace-nowrap capitalize font-medium\"><GetFormatedPnl value={row.getValue(\"NetRoi\")} showPercentage={true} showCurrency={false} /></div>\r\n    },\r\n];\r\n\r\nexport const TradeColumns = [\r\n    {\r\n        accessorKey: \"Symbol\",\r\n        header: () => <span>Symbol</span>,\r\n        cell: ({ row }) => <div className=\"uppercase\">{row.getValue(\"Symbol\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"TradeStatus\",\r\n        header: () => <span>Status</span>,\r\n        cell: ({ row }) => (\r\n            <div className=\"capitalize\">\r\n                <StatusPill value={row.getValue(\"TradeStatus\")} />\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        accessorKey: \"EntryDate\",\r\n        header: () => <div className=\"capitalize\">Open Date</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{formatDate(row.getValue(\"EntryDate\"), 'dd/mm/yyyy')}</div>\r\n    },\r\n    {\r\n        accessorKey: \"ExitDate\",\r\n        header: () => <div className=\"capitalize\">Close Date</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{formatDate(row.getValue(\"ExitDate\"), 'dd/mm/yyyy')}</div>\r\n    },\r\n    {\r\n        accessorKey: \"Action\",\r\n        header: () => <div className=\"capitalize\">Action</div>,\r\n        cell: ({ row }) => <div className=\"uppercase\">{row.getValue(\"Action\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"NetPnL\",\r\n        header: () => <div className=\"capitalize\">Net P&L</div>,\r\n        cell: ({ row }) => <div className=\"flex items-center capitalize font-medium\"><GetFormatedPnl value={row.getValue(\"NetPnL\")} /></div>\r\n    },\r\n    {\r\n        accessorKey: \"NetRoi\",\r\n        header: () => <div className=\"capitalize\">Net ROI</div>,\r\n        cell: ({ row }) => <div className=\"flex items-center capitalize font-medium\"><GetFormatedPnl value={row.getValue(\"NetRoi\")} showPercentage={true} showCurrency={false} /></div>\r\n    },\r\n    {\r\n        accessorKey: \"EntryPrice\",\r\n        header: () => <div className=\"capitalize\">Entry Price</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\"><GetFormatedCurrency value={row.getValue(\"EntryPrice\")} /></div>\r\n    },\r\n    {\r\n        accessorKey: \"ExitPrice\",\r\n        header: () => <div className=\"capitalize\">Exit Price</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\"><GetFormatedCurrency value={row.getValue(\"ExitPrice\")} /></div>\r\n    },\r\n    {\r\n        accessorKey: \"StopLoss\",\r\n        header: () => <div className=\"capitalize\">Stop Loss</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\"><GetFormatedCurrency value={row.getValue(\"StopLoss\")} /></div>\r\n    },\r\n    {\r\n        accessorKey: \"Quantity\",\r\n        header: () => <div className=\"capitalize\">Quantity</div>,\r\n        cell: ({ row }) => <div className=\"capitalize font-medium\">{row.getValue(\"Quantity\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"Setup\",\r\n        header: () => <div className=\"capitalize\">Setup</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"Setup\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"EntryReason\",\r\n        header: () => <div className=\"capitalize\">Entry Reason</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"EntryReason\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"ExitReason\",\r\n        header: () => <div className=\"capitalize\">Exit Reason</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"ExitReason\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"Emotions\",\r\n        header: () => <div className=\"capitalize\">Emotions</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"Emotions\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"MarketCondition\",\r\n        header: () => <div className=\"capitalize\">Market Condition</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"MarketCondition\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"AdditionalInfo\",\r\n        header: () => <div className=\"capitalize\">Additional Info</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"AdditionalInfo\")}</div>\r\n    },\r\n];\r\n\r\nexport const AccountColumns = [\r\n    {\r\n        accessorKey: \"AccountName\",\r\n        header: () => <span>Account Name</span>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"AccountName\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"Broker\",\r\n        header: () => <span>Broker</span>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"Broker\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"InitialBalance\",\r\n        header: () => <span>Balance</span>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"InitialBalance\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"Currency\",\r\n        header: () => <span>Currency</span>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"Currency\")}</div>\r\n    },\r\n];\r\n\r\nexport const TagsColumns = [\r\n    {\r\n        accessorKey: \"TagName\",\r\n        header: () => <span>Tag Name</span>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"TagName\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"TagType\",\r\n        header: () => <span>Type</span>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"TagType\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"TagDesc\",\r\n        header: () => <span>Description</span>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"TagDesc\")}</div>\r\n    },\r\n];\r\n\r\nexport const ImportHistColumns = [\r\n    {\r\n        accessorKey: \"Imported On\",\r\n        header: () => <span>Imported On</span>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"Imported On\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"Broker Name\",\r\n        header: () => <span>Broker Name</span>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"Broker Name\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"Account Name\",\r\n        header: () => <span>Account Name</span>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"Account Name\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"Total Trades\",\r\n        header: () => <span>Total Trades</span>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"Total Trades\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"File\",\r\n        header: () => <span>File</span>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"File\")}</div>\r\n    },\r\n];","import React from \"react\";\r\nimport { flexRender, getCoreRowModel, useReactTable } from \"@tanstack/react-table\";\r\nimport { MdDeleteOutline, MdEdit } from \"react-icons/md\";\r\n\r\nexport const KeyValueTable = (props) => {\r\n\r\n    const { data } = props;\r\n\r\n    return (\r\n        <div className=\"relative overflow-x-auto no-scrollbar shadow-md dark:shadow-2xl\">\r\n            <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\r\n                <tbody>\r\n                    {data.map((item, index) => (\r\n                        <tr key={index} className={`border-b dark:border-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 ${index % 2 === 0 ? \"bg-gray-100 dark:bg-primary-dark\" : \"bg-white dark:bg-main-dark\"}`}>\r\n                            <td className=\"px-2 py-1 break-words capitalize\">{item.key}</td>\r\n                            <td className=\"px-2 py-1 break-words\">{item.value}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const DefaultTable = (props) => {\r\n\r\n    const { columns, data, isEdit, handleClick, handleEditClick, handleDeleteClick, Id } = props;\r\n\r\n    const table = useReactTable({\r\n        data,\r\n        columns,\r\n        getCoreRowModel: getCoreRowModel(),\r\n    })\r\n\r\n    return (\r\n        <div className=\"relative overflow-x-auto no-scrollbar shadow-md dark:shadow-2xl\">\r\n            <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\r\n                <thead className=\"text-md text-gray-700 uppercase bg-gray-200 dark:bg-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600\">\r\n                    {table.getHeaderGroups().map(headerGroup => (\r\n                        <tr key={headerGroup.id}>\r\n                            {headerGroup.headers.map(header => {\r\n                                return (\r\n                                    <th key={header.id} className=\"capitalize px-6 py-3 text-center whitespace-nowrap\">\r\n                                        {header.isPlaceholder\r\n                                            ? null\r\n                                            : flexRender(\r\n                                                header.column.columnDef.header,\r\n                                                header.getContext()\r\n                                            )}\r\n                                    </th>\r\n                                )\r\n                            })}\r\n                            {isEdit && <th scope=\"col\" className=\"capitalize px-6 py-3 text-center whitespace-nowrap\"></th>}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody>\r\n                    {table.getRowModel().rows.length ? (\r\n                        table.getRowModel().rows.map((row, i) => (\r\n                            <tr\r\n                                key={row.id}\r\n                                onClick={() => handleClick && handleClick(row?.original?.[Id])}\r\n                                className={`border-b dark:border-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 ${handleClick && 'cursor-pointer'} ${i % 2 === 0 ? \"bg-white dark:bg-main-dark\" : \"bg-gray-100 dark:bg-primary-dark\"}`}>\r\n                                {row.getVisibleCells().map((cell) => (\r\n                                    <td key={cell.id} className=\"px-6 py-4 text-center whitespace-nowrap\">\r\n                                        {flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n                                    </td>\r\n                                ))}\r\n\r\n                                {\r\n                                    isEdit && <td className=\"py-4 w-16 flex items-center justify-between\">\r\n                                        <button className=\"font-medium text-gray-900 dark:text-white hover:underline\" onClick={() => handleEditClick(row?.original?.[Id])}><MdEdit className=\"w-5 h-5\" /></button>\r\n                                        <button className=\"font-medium text-red-600 dark:text-red-500 hover:underline\" onClick={() => handleDeleteClick(row?.original?.[Id])}><MdDeleteOutline className=\"w-5 h-5\" /></button>\r\n                                    </td>\r\n                                }\r\n                            </tr>\r\n                        ))\r\n                    ) : (\r\n                        <tr className=\"text-center h-32\">\r\n                            <td colSpan={12}>No Record Found!</td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { AiFillCaretUp, AiFillCaretDown } from \"react-icons/ai\";\r\n\r\nexport const GetFormatedCurrency = (props) => {\r\n    const { value = 0 } = props;\r\n    const currency = useSelector((state) => state.account.selectedCurrency, []) || '';\r\n    const amount = currency + parseFloat(value).toFixed(2);\r\n\r\n    return (\r\n        <>\r\n            {amount}\r\n        </>\r\n    )\r\n}\r\n\r\nexport const GetFormatedPnl = (props) => {\r\n\r\n    const { value = 0, showCurrency = true, showPlusMinus = true, showPercentage = false, showIcon = false, showBracket = false } = props;\r\n    const currency = useSelector((state) => state.account.selectedCurrency, []) || '';\r\n\r\n    const conVal = parseInt(value);\r\n    const sign = showPlusMinus ? (conVal > 0 ? '+' : conVal < 0 ? '-' : '') : '';\r\n    const output = sign + ((showCurrency && !showPercentage) ? currency : '') + (Math.abs(parseFloat(value)).toFixed(2)) + (showPercentage ? '%' : '');\r\n\r\n    return (\r\n        <>\r\n            {showIcon ? (\r\n                conVal < 0 ? <AiFillCaretDown className=\"text-red mr-1\" /> : <AiFillCaretUp className=\"text-green mr-1\" />\r\n            ) : null}\r\n            <span className={conVal < 0 ? \"text-red\" : conVal > 0 ? \"text-green\" : 'dark:text-white'}>\r\n                {showBracket ? ('(' + output + ')') : output}\r\n            </span>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nimport routes from \"routes/routes\";\r\nimport { classNames } from \"utils\";\r\n\r\nconst TabPanel = () => {\r\n\r\n    // Check if the current location is active\r\n    const location = useLocation();\r\n    const isActive = (routeName) => location.pathname.includes(routeName);\r\n\r\n    return (\r\n        <section className=\"sm:flex flex-col justify-center items-center\">\r\n            <div>\r\n                <div className=\"my-3 mt-6\">\r\n                    <span className='text-xs font-medium text-gray-500 dark:text-gray-400'>OVERVIEW</span>\r\n                    <h3 className='text-2xl font-medium dark:text-white'>Account</h3>\r\n                </div>\r\n                <div className=\"sm:w-760 text-sm font-medium text-center text-gray-500 border-b border-gray-200 dark:text-gray-400 dark:border-gray-700\">\r\n                    <ul className=\"flex flex-nowrap overflow-x-auto no-scrollbar -mb-px\">\r\n                        {\r\n                            routes.tabs.map((route) =>\r\n                                <li key={route.id} className=\"mr-2\">\r\n                                    <NavLink\r\n                                        to={`/${route.path}`}>\r\n                                        <span className={classNames(\"text-sm inline-block p-4 border-b-2 rounded-t-lg whitespace-nowrap\",\r\n                                            isActive(route.path) ? \"active text-brand-100 border-brand-100 dark:text-white dark:border-brand-100\"\r\n                                                : \"border-transparent hover:text-gray-600 hover:border-gray-300 dark:hover:text-gray-300\"\r\n                                        )}>{route.name}</span>\r\n                                    </NavLink>\r\n                                </li>\r\n                            )}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default TabPanel;","import React from 'react'\r\nimport TabPanel from '../'\r\nimport { DeleteButton } from 'components/common/buttons';\r\nimport { DefaultTable } from 'components/common/table';\r\nimport { ImportHistColumns } from 'components/common/table/columns';\r\n\r\nconst Imports = () => {\r\n\r\n  const data = [];\r\n\r\n  return (\r\n    <div>\r\n      <TabPanel />\r\n      <div className=\"flex flex-col justify-center items-center\">\r\n        <div className=\"w-full max-w-3xl p-6 mt-8 space-y-8 sm:p-8 bg-white rounded-lg shadow dark:bg-main-dark\">\r\n          <div className=\"py-8 px-1 max-w-2xl lg:py-2\">\r\n            <form>\r\n              <div className=\"grid gap-4 sm:grid-cols-2 sm:gap-6\">\r\n                <div className=\"w-full\">\r\n                  <h2 className=\"mb-2 sm:mb-2 text-lg font-bold text-gray-900 dark:text-white uppercase\">Import History</h2>\r\n                </div>\r\n                <div className=\"sm:col-span-2 relative overflow-x-auto shadow-md sm:rounded-lg\">\r\n                  <DefaultTable data={data} columns={ImportHistColumns} />\r\n                </div>\r\n                <div className=\"sm:col-span-2 flex sm:justify-end sm:items-start\">\r\n                  <DeleteButton id=\"clear-tags\">CLEAR ALL TRADES</DeleteButton>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Imports;\r\n"],"names":["Button","forwardRef","_ref","ref","className","props","_objectWithoutProperties","_excluded","_jsx","_objectSpread","SubmitButton","_ref2","_excluded2","type","DeleteButton","_ref3","_excluded3","ResetButton","_ref4","_excluded4","IconButton","_ref5","_excluded5","value","status","toLowerCase","classNames","startsWith","children","RecentTradeCols","accessorKey","header","cell","row","getValue","StatusPill","formatDate","_ref6","GetFormatedPnl","_ref7","showPercentage","showCurrency","TradeColumns","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","GetFormatedCurrency","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","AccountColumns","_ref25","_ref26","_ref27","_ref28","TagsColumns","_ref29","_ref30","_ref31","ImportHistColumns","_ref32","_ref33","_ref34","_ref35","_ref36","KeyValueTable","data","map","item","index","_jsxs","concat","key","DefaultTable","columns","isEdit","handleClick","handleEditClick","handleDeleteClick","Id","table","useReactTable","getCoreRowModel","getHeaderGroups","headerGroup","headers","isPlaceholder","flexRender","column","columnDef","getContext","id","scope","getRowModel","rows","length","i","onClick","_row$original","original","getVisibleCells","_row$original2","MdEdit","_row$original3","MdDeleteOutline","colSpan","_props$value","amount","useSelector","state","account","selectedCurrency","parseFloat","toFixed","_Fragment","_props$value2","_props$showCurrency","_props$showPlusMinus","showPlusMinus","_props$showPercentage","_props$showIcon","showIcon","_props$showBracket","showBracket","currency","conVal","parseInt","output","Math","abs","AiFillCaretDown","AiFillCaretUp","location","useLocation","routes","tabs","route","NavLink","to","path","routeName","pathname","includes","name","TabPanel"],"sourceRoot":""}