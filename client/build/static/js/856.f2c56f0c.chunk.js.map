{"version":3,"file":"static/js/856.f2c56f0c.chunk.js","mappings":"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","sources":["components/common/buttons/index.jsx","components/common/checkbox/index.jsx","components/common/inputs/InputField.jsx","helpers/validation.js","pages/auth/login/loginForm.jsx","pages/auth/login/index.jsx"],"sourcesContent":["import React, { forwardRef } from \"react\"\r\n\r\nexport const Button = forwardRef(({ className, ...props }, ref) => (\r\n\r\n    <button\r\n    className=\"w-full px-5 py-2.5 text-sm sm:text-base font-medium text-center text-white bg-brand-300 rounded-lg hover:bg-brand-200\"\r\n    ref={ref}\r\n    {...props}></button>\r\n\r\n));\r\n\r\nexport const SubmitButton = forwardRef(({ className, ...props }, ref) => (\r\n\r\n    <button\r\n    type=\"submit\"\r\n    className=\"inline-flex items-center px-5 py-2 text-sm font-medium text-center text-white bg-brand-300 rounded-lg hover:bg-brand-200\"\r\n    ref={ref}\r\n    {...props}></button>\r\n\r\n));\r\n\r\nexport const DeleteButton = forwardRef(({ className, ...props }, ref) => (\r\n\r\n    <button\r\n    type=\"submit\"\r\n    className=\"inline-flex items-center px-5 py-2.5 text-sm font-medium text-center text-red border border-red rounded-lg hover:bg-red hover:text-white\"\r\n    ref={ref}\r\n    {...props}></button>\r\n\r\n));\r\n\r\nexport const ResetButton = forwardRef(({ className, ...props }, ref) => (\r\n\r\n    <button\r\n    type=\"reset\" \r\n    className=\"inline-flex items-center px-5 py-2 mr-4 text-sm font-medium text-center text-white bg-gray-500 rounded-lg hover:bg-gray-600\"\r\n    ref={ref}\r\n    {...props}></button>\r\n\r\n));\r\n\r\nexport const IconButton = forwardRef(({ className, ...props }, ref) => (\r\n\r\n    <button\r\n    type=\"button\" \r\n    className={`bg-white hover:bg-gray-200 dark:bg-main-dark dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white font-medium rounded-lg text-sm px-4 py-2 text-center inline-flex justify-between items-center shadow-md m-2`}\r\n    ref={ref}\r\n    {...props}></button>\r\n\r\n));\r\n","import React, { forwardRef } from \"react\"\r\n\r\nconst Checkbox = forwardRef(({ className, ...props }, ref) => (\r\n    <input\r\n        type=\"checkbox\"\r\n        className=\"w-4 h-4 text-primary-100 focus:ring-primary-100 bg-gray-100 border-gray-300 rounded dark:bg-gray-700 dark:border-gray-600\"\r\n        ref={ref}\r\n        {...props}>\r\n    </input>\r\n))\r\n\r\nexport default Checkbox;\r\n","// Custom components\r\nimport React from \"react\";\r\n\r\nfunction InputField(props) {\r\n    const { label, id, type, placeholder, disabled, handleChange, htmlName, value, errorMsg } = props;\r\n\r\n    let inputClass = \"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-100 focus:border-primary-100 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-100 dark:focus:border-primary-100\";\r\n\r\n    const errorClass = \"bg-red-50 border border-red-500 text-red-900 placeholder-red-700 text-sm rounded-lg focus:ring-red-500 dark:bg-gray-700 focus:border-red-500 block w-full p-2.5 dark:text-red-500 dark:placeholder-red-500 dark:border-red-500\";\r\n\r\n    if(type === \"file\") inputClass = \"block w-full text-sm text-gray-900 border border-gray-300 rounded-lg cursor-pointer bg-gray-50 dark:text-gray-400 focus:outline-none dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400\";\r\n\r\n    return (\r\n        <>\r\n            <label htmlFor={id} className={`block mb-2 text-sm font-medium ${errorMsg ? `text-red-700 dark:text-red-500` : `text-gray-900 dark:text-white`}`}>{label}</label>\r\n            {type === \"textArea\"\r\n                ? <textarea id={id} rows=\"8\" className=\"block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white\" placeholder={placeholder}></textarea>\r\n                : <input disabled={disabled} type={type} id={id} placeholder={placeholder} value={value} className={errorMsg ? errorClass : inputClass} name={htmlName} onChange={handleChange} />}\r\n            {errorMsg && <p className=\"mt-2 text-sm text-red-600 dark:text-red-500\"><span className=\"font-medium\">{errorMsg}</span></p>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default InputField;","import * as Yup from 'yup';\r\n\r\nconst SignUpSchema = Yup.object().shape({\r\n  Email: Yup.string().email().required(\"Email is required\"),\r\n  UserName: Yup.string()\r\n    .min(2, \"Too Short!\")\r\n    .max(50, \"Too Long!\")\r\n    .required(\"Username is required\"),\r\n  Password: Yup.string()\r\n    .required(\"Password is required\")\r\n    .min(8, \"too short - should be 8 chars minimum\"),\r\n  ConfirmPassword: Yup.string()\r\n    .required(\"You should repeat the password\")\r\n    .oneOf([Yup.ref('Password'), null], 'Type the correct password'),\r\n});\r\n\r\nconst SignInSchema = Yup.object().shape({\r\n  Email: Yup.string().email().required(\"Email is required\"),\r\n  Password: Yup.string().required(\"Password is required\")\r\n    .min(8, \"too short - should be 8 chars minimum\")\r\n});\r\n\r\nconst AccountSchema = Yup.object().shape({\r\n  AccountName: Yup.string().required(\"Account Name is required\"),\r\n  Market: Yup.string().required(\"Select Market\"),\r\n  Broker: Yup.string().required(\"Select Broker\"),\r\n  InitialBalance: Yup.number().positive().integer().required(\"Initial Balance is required\"),\r\n  Currency: Yup.string().required(\"Select Currency\")\r\n});\r\n\r\nconst TagSchema = Yup.object().shape({\r\n  TagName: Yup.string().required(\"Tag Name is required\"),\r\n  TagType: Yup.string().required(\"Select Tag Type\"),\r\n  TagDesc: Yup.string().required(\"Tag Description is required\")\r\n});\r\n\r\nconst TradeSchema = Yup.object().shape({\r\n  Account: Yup.string().required(\"Select Account\"),\r\n  Market: Yup.string().required(\"Select Market\"),\r\n  Broker: Yup.string().required(\"Select Broker\"),\r\n  Setup: Yup.string().required(\"Select Setup\"),\r\n  Symbol: Yup.string().required(\"Symbol is required\"),\r\n  EntryDate: Yup.date().required(\"Entry Date is required\"),\r\n  ExitDate: Yup.date().required(\"Exit Date is required\").min(Yup.ref('EntryDate')),\r\n  EntryPrice: Yup.number().positive().integer().required(\"Entry Price is required\"),\r\n  ExitPrice: Yup.number().positive().integer().required(\"Initial Balance is required\"),\r\n  StopLoss: Yup.number().positive().integer().required(\"Stop Loss is required\"),\r\n  Quantity: Yup.number().positive().integer().required(\"Quantity is required\")\r\n});\r\n\r\n\r\nexport { SignUpSchema, SignInSchema, AccountSchema, TagSchema, TradeSchema };","import React, { useEffect } from 'react';\r\nimport { useFormik } from \"formik\";\r\nimport InputField from 'components/common/inputs/InputField';\r\nimport Checkbox from 'components/common/checkbox';\r\nimport { Button } from 'components/common/buttons';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { SignInSchema } from 'helpers/validation';\r\nimport { useSelector } from 'react-redux';\r\nimport { useLoginMutation } from \"state/api/auth/authApi.js\";\r\n\r\nconst LoginForm = () => {\r\n\r\n    const [login, { isSuccess, data }] = useLoginMutation();\r\n    const registeredMail = useSelector((state) => state.auth.userInfo?.Email);\r\n    const navigate = useNavigate();\r\n\r\n    const initialValues = {\r\n        Email: registeredMail || '',\r\n        Password: '',\r\n        IsRemember: true,\r\n    };\r\n\r\n    const { values, errors, touched, handleChange, handleSubmit, handleBlur } = useFormik({\r\n        initialValues: initialValues,\r\n        validationSchema: SignInSchema,\r\n        onSubmit: values => {\r\n            submitForm(values);\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (isSuccess) {\r\n            navigate('/');\r\n        }\r\n    }, [isSuccess, data]);\r\n\r\n    const submitForm = async (formData) => {\r\n        try {\r\n            await login(formData).unwrap();\r\n        } catch (error) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form className=\"space-y-4 md:space-y-6\" onSubmit={handleSubmit}>\r\n                <div>\r\n                    <InputField label={\"Your email\"} placeholder={\"name@company.com\"} id={\"email\"} type={\"text\"} htmlName={\"Email\"} value={values.Email} handleChange={handleChange} onBlur={handleBlur} errorMsg={errors.Email && touched.Email && errors.Email} />\r\n                </div>\r\n                <div>\r\n                    <InputField label={\"Password\"} placeholder={\"••••••••\"} id={\"password\"} type={\"password\"} htmlName={\"Password\"} value={values.Password} handleChange={handleChange} onBlur={handleBlur} errorMsg={errors.Password && touched.Password && errors.Password} />\r\n                </div>\r\n                <div className=\"flex items-center justify-between\">\r\n                    <div className=\"flex items-start\">\r\n                        <div className=\"flex items-center h-5\">\r\n                            <Checkbox id=\"remember\" name=\"IsRemember\" onChange={handleChange} checked={values.IsRemember} />\r\n                        </div>\r\n                        <div className=\"ml-2 text-sm\">\r\n                            <label htmlFor=\"remember\" className=\"text-gray-500 dark:text-gray-300\">Remember me</label>\r\n                        </div>\r\n                    </div>\r\n                    <a href=\"#\" className=\"text-sm font-medium text-primary-100 hover:underline dark:text-brand-100\">Forgot password?</a>\r\n                </div>\r\n                <Button type=\"submit\" id=\"sign-in\">Sign in</Button>\r\n                <p className=\"text-sm font-light text-gray-500 dark:text-gray-400\">\r\n                    Don’t have an account yet? {\" \"}\r\n                    <Link\r\n                        to={\"/auth/signup\"}>\r\n                        <span className=\"font-medium text-primary-100 hover:underline dark:text-brand-100\">Sign up</span>\r\n                    </Link>\r\n                </p>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport Logo from 'assets/logo';\r\nimport { ToastContainer } from 'components/common/alerts';\r\nimport LoginForm from './loginForm';\r\n\r\nconst Login = () => {\r\n  return (\r\n    <section className=\"bg-gray-50 dark:bg-primary-dark\">\r\n      <div className=\"min-h-screen flex flex-col items-center lg:justify-center px-6 py-8 mx-auto md:h-screen lg:py-0\">\r\n        <Logo margin={\"mb-6\"} height={\"sm:h-10 sm:w-10\"} />\r\n        <div className=\"w-full bg-white rounded-lg shadow dark:border md:mt-0 sm:max-w-md xl:p-0 dark:bg-main-dark dark:border-gray-800\">\r\n          <div className=\"p-6 space-y-4 md:space-y-6 sm:p-8\">\r\n            <h1 className=\"text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white\">\r\n              Sign in to your account\r\n            </h1>\r\n            <LoginForm />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Login\r\n"],"names":["Button","forwardRef","_ref","ref","className","props","_objectWithoutProperties","_excluded","_jsx","_objectSpread","SubmitButton","_ref2","_excluded2","type","DeleteButton","_ref3","_excluded3","ResetButton","_ref4","_excluded4","IconButton","_ref5","_excluded5","Checkbox","label","id","placeholder","disabled","handleChange","htmlName","value","errorMsg","inputClass","_jsxs","_Fragment","children","htmlFor","concat","rows","name","onChange","SignUpSchema","Yup","shape","Email","email","required","UserName","min","max","Password","ConfirmPassword","oneOf","SignInSchema","AccountSchema","AccountName","Market","Broker","InitialBalance","positive","integer","Currency","TagSchema","TagName","TagType","TagDesc","TradeSchema","Account","Setup","Symbol","EntryDate","ExitDate","EntryPrice","ExitPrice","StopLoss","Quantity","_useLoginMutation","useLoginMutation","_useLoginMutation2","_slicedToArray","login","_useLoginMutation2$","isSuccess","data","registeredMail","useSelector","state","_state$auth$userInfo","auth","userInfo","navigate","useNavigate","initialValues","IsRemember","_useFormik","useFormik","validationSchema","onSubmit","values","submitForm","errors","touched","handleSubmit","handleBlur","useEffect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","formData","wrap","_context","prev","next","unwrap","t0","abrupt","stop","_x","apply","arguments","InputField","onBlur","checked","href","Link","to","Logo","margin","height","LoginForm"],"sourceRoot":""}