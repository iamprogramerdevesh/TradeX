{"version":3,"file":"static/js/514.3410744e.chunk.js","mappings":"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","sources":["components/common/table/index.jsx","helpers/format.js","components/charts/WinrateChart.jsx","components/charts/TotalPnlChart.jsx","pages/analytics/components/overview.jsx","components/charts/ReturnsChart.jsx","pages/analytics/components/statistics.jsx","pages/analytics/components/detailed.jsx","pages/analytics/index.jsx","state/api/charts/chartsApi.js"],"sourcesContent":["import React from \"react\";\r\nimport { flexRender, getCoreRowModel, useReactTable } from \"@tanstack/react-table\";\r\nimport { MdDeleteOutline, MdEdit } from \"react-icons/md\";\r\n\r\nexport const KeyValueTable = (props) => {\r\n\r\n    const { data } = props;\r\n\r\n    return (\r\n        <div className=\"relative overflow-x-auto no-scrollbar shadow-md dark:shadow-2xl\">\r\n            <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\r\n                <tbody>\r\n                    {data.map((item, index) => (\r\n                        <tr key={index} className={`border-b dark:border-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 ${index % 2 === 0 ? \"bg-gray-100 dark:bg-primary-dark\" : \"bg-white dark:bg-main-dark\"}`}>\r\n                            <td className=\"px-2 py-1 break-words capitalize\">{item.key}</td>\r\n                            <td className=\"px-2 py-1 break-words\">{item.value}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const DefaultTable = (props) => {\r\n\r\n    const { columns, data, isEdit, handleClick, handleEditClick, handleDeleteClick, Id } = props;\r\n\r\n    const table = useReactTable({\r\n        data,\r\n        columns,\r\n        getCoreRowModel: getCoreRowModel(),\r\n    })\r\n\r\n    return (\r\n        <div className=\"relative overflow-x-auto no-scrollbar shadow-md dark:shadow-2xl\">\r\n            <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\r\n                <thead className=\"text-md text-gray-700 uppercase bg-gray-200 dark:bg-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600\">\r\n                    {table.getHeaderGroups().map(headerGroup => (\r\n                        <tr key={headerGroup.id}>\r\n                            {headerGroup.headers.map(header => {\r\n                                return (\r\n                                    <th key={header.id} className=\"capitalize px-6 py-3 text-center whitespace-nowrap\">\r\n                                        {header.isPlaceholder\r\n                                            ? null\r\n                                            : flexRender(\r\n                                                header.column.columnDef.header,\r\n                                                header.getContext()\r\n                                            )}\r\n                                    </th>\r\n                                )\r\n                            })}\r\n                            {isEdit && <th scope=\"col\" className=\"capitalize px-6 py-3 text-center whitespace-nowrap\"></th>}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody>\r\n                    {table.getRowModel().rows.length ? (\r\n                        table.getRowModel().rows.map((row, i) => (\r\n                            <tr\r\n                                key={row.id}\r\n                                onClick={() => handleClick && handleClick(row?.original?.[Id])}\r\n                                className={`border-b dark:border-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 ${handleClick && 'cursor-pointer'} ${i % 2 === 0 ? \"bg-white dark:bg-main-dark\" : \"bg-gray-100 dark:bg-primary-dark\"}`}>\r\n                                {row.getVisibleCells().map((cell) => (\r\n                                    <td key={cell.id} className=\"px-6 py-4 text-center whitespace-nowrap\">\r\n                                        {flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n                                    </td>\r\n                                ))}\r\n\r\n                                {\r\n                                    isEdit && <td className=\"py-4 w-16 flex items-center justify-between\">\r\n                                        <button className=\"font-medium text-gray-900 dark:text-white hover:underline\" onClick={() => handleEditClick(row?.original?.[Id])}><MdEdit className=\"w-5 h-5\" /></button>\r\n                                        <button className=\"font-medium text-red-600 dark:text-red-500 hover:underline\" onClick={() => handleDeleteClick(row?.original?.[Id])}><MdDeleteOutline className=\"w-5 h-5\" /></button>\r\n                                    </td>\r\n                                }\r\n                            </tr>\r\n                        ))\r\n                    ) : (\r\n                        <tr className=\"text-center h-32\">\r\n                            <td colSpan={12}>No Record Found!</td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { AiFillCaretUp, AiFillCaretDown } from \"react-icons/ai\";\r\n\r\nexport const GetFormatedCurrency = (props) => {\r\n    const { value = 0 } = props;\r\n    const currency = useSelector((state) => state.account.selectedCurrency, []) || '';\r\n    const amount = currency + parseFloat(value).toFixed(2);\r\n\r\n    return (\r\n        <>\r\n            {amount}\r\n        </>\r\n    )\r\n}\r\n\r\nexport const GetFormatedPnl = (props) => {\r\n\r\n    const { value = 0, showCurrency = true, showPlusMinus = true, showPercentage = false, showIcon = false, showBracket = false } = props;\r\n    const currency = useSelector((state) => state.account.selectedCurrency, []) || '';\r\n\r\n    const conVal = parseInt(value);\r\n    const sign = showPlusMinus ? (conVal > 0 ? '+' : conVal < 0 ? '-' : '') : '';\r\n    const output = sign + ((showCurrency && !showPercentage) ? currency : '') + (Math.abs(parseFloat(value)).toFixed(2)) + (showPercentage ? '%' : '');\r\n\r\n    return (\r\n        <>\r\n            {showIcon ? (\r\n                conVal < 0 ? <AiFillCaretDown className=\"text-red mr-1\" /> : <AiFillCaretUp className=\"text-green mr-1\" />\r\n            ) : null}\r\n            <span className={conVal < 0 ? \"text-red\" : conVal > 0 ? \"text-green\" : 'dark:text-white'}>\r\n                {showBracket ? ('(' + output + ')') : output}\r\n            </span>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\nconst WinrateChartOptions = {\r\n    chart: {\r\n        type: 'radialBar',\r\n        offsetY: -20,\r\n        sparkline: {\r\n            enabled: true\r\n        }\r\n    },\r\n    colors: [\"#7265e6\", \"#A195FD\"],\r\n    plotOptions: {\r\n        radialBar: {\r\n            startAngle: -90,\r\n            endAngle: 90,\r\n            track: {\r\n                background: \"#e7e7e7\",\r\n                strokeWidth: '97%',\r\n                margin: 5, // margin is in pixels\r\n            },\r\n            dataLabels: {\r\n                name: {\r\n                    show: true\r\n                },\r\n                value: {\r\n                    offsetY: -40,\r\n                    fontSize: '24px'\r\n                }\r\n            }\r\n        }\r\n    },\r\n    grid: {\r\n        padding: {\r\n            top: -10\r\n        }\r\n    },\r\n    stroke: {\r\n        lineCap: 'round'\r\n    },\r\n    fill: {\r\n        type: 'gradient',\r\n        gradient: {\r\n            shade: 'light',\r\n            shadeIntensity: 0.4,\r\n            inverseColors: false,\r\n            opacityFrom: 1,\r\n            opacityTo: 1,\r\n            stops: [0, 50, 53, 91]\r\n        },\r\n    },\r\n    labels: ['Winrate'],\r\n};\r\n\r\nconst WinrateChart = () => {\r\n\r\n    const data = useSelector((state) => state.account?.stats, []);\r\n    const { winrate = 0 } = data;\r\n\r\n    const [series] = useState([winrate]);\r\n    const [options, setOptions] = useState(WinrateChartOptions);\r\n    const currentMode = useSelector((state) => state.global.mode);\r\n\r\n    useEffect(() => {\r\n        setOptions((prevState) => ({\r\n            ...prevState,\r\n            plotOptions: {\r\n                radialBar: {\r\n                    dataLabels: {\r\n                        value: {\r\n                            color: `${currentMode === 'light' ? '#111827' : '#f3f4f6'}`,\r\n                        },\r\n                    }\r\n                }\r\n            }\r\n        }));\r\n    }, [currentMode]);\r\n\r\n    return (\r\n        <div id=\"chart\">\r\n            <ReactApexChart options={options} series={series} type=\"radialBar\" height={280} width={250} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WinrateChart\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useGetTotalPnlQuery } from 'state/api/charts/chartsApi';\r\n\r\n// third-party\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\n// chart options\r\nconst areaChartOptions = {\r\n  chart: {\r\n    height: 365,\r\n    type: 'area',\r\n    toolbar: {\r\n      show: false\r\n    }\r\n  },\r\n  colors: [\"#7265e6\", \"#A195FD\"],\r\n  dataLabels: {\r\n    enabled: false\r\n  },\r\n  stroke: {\r\n    curve: 'smooth',\r\n    width: 2\r\n  },\r\n  grid: {\r\n    strokeDashArray: 0\r\n  }\r\n};\r\n\r\n// ==============================|| PnL AREA CHART ||============================== //\r\n\r\nconst TotalPnlChart = () => {\r\n\r\n  const currency = useSelector((state) => state.account.selectedCurrency, []) || '';\r\n  const id = useSelector((state) => state.account?.selectedAccount?.AccountId);\r\n  const { data, isLoading } = useGetTotalPnlQuery(id, {\r\n    refetchOnMountOrArgChange: true,\r\n    skip: !id,\r\n  });\r\n\r\n  const [series, setSeries] = useState([{ name: 'P&L', data: data }]);\r\n\r\n  const [options, setOptions] = useState(areaChartOptions);\r\n  const currentMode = useSelector((state) => state.global.mode);\r\n\r\n  useEffect(() => {\r\n    setOptions((prevState) => ({\r\n      ...prevState,\r\n      grid: {\r\n        borderColor: `${currentMode === 'light' ? '#e5e7eb' : '#4b5563'}`,\r\n      },\r\n      xaxis: {\r\n        labels: {\r\n          style: {\r\n            colors: `${currentMode === 'light' ? '#111827' : '#9ca3af'}`,\r\n          }\r\n        }\r\n      },\r\n      yaxis: {\r\n        labels: {\r\n          style: {\r\n            colors: `${currentMode === 'light' ? '#111827' : '#9ca3af'}`,\r\n          }\r\n        }\r\n      },\r\n      tooltip: {\r\n        y: {\r\n          formatter(val) {\r\n            return `${currency + val}`;\r\n          }\r\n        }\r\n      },\r\n    }));\r\n\r\n    data && setSeries([{ name: 'P&L', data: data }]);\r\n  }, [currentMode, data, isLoading]);\r\n\r\n  return <ReactApexChart options={options} series={series} type=\"area\" height={365} />;\r\n};\r\n\r\nexport default TotalPnlChart;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CircleChart from 'components/charts/WinrateChart';\r\nimport { GetFormatedCurrency, GetFormatedPnl } from 'helpers/format';\r\nimport TotalPnlChart from 'components/charts/TotalPnlChart';\r\n\r\nconst Overview = () => {\r\n\r\n  const data = useSelector((state) => state.account?.stats, []);\r\n  const { totalPnl, totalRevenue, totalReturns, totalTrades, totalProfit, totalLoss, averageTradePnl, maximumProfit, maximumLoss, totalCommissionsFees, profitFactor, totalRR } = data || [];\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"grid h-auto grid-rows-1 sm:grid-cols-6 sm:gap-4 mb-4 sm:h-56 my-4 bg-white dark:bg-main-dark rounded-md border border-gray-200 dark:border-gray-900 shadow-sm\">\r\n        <div className=\"flex justify-center items-center col-span-2\">\r\n          <CircleChart />\r\n        </div>\r\n        <div className=\"flex flex-col justify-between my-4 mx-4 sm:mx-0\">\r\n          <div className=\"flex justify-between my-2\">\r\n            <div className=\"flex flex-col\">\r\n              <p className=\"font-dm text-xs font-medium text-gray-400 mb-1\">Net P&L</p>\r\n              <h4 className=\"flex items-center text-base font-medium\"><GetFormatedPnl value={totalPnl} /></h4>\r\n            </div>\r\n            <div className=\"divider border-r-2 border-gray-300\"></div>\r\n          </div>\r\n          <div className=\"flex justify-between my-2\">\r\n            <div className=\"flex flex-col\">\r\n              <p className=\"font-dm text-xs font-medium text-gray-400 mb-1\">Total Revenue</p>\r\n              <h4 className=\"text-base font-medium dark:text-white\"><GetFormatedCurrency value={totalRevenue} /></h4>\r\n            </div>\r\n            <div className=\"divider border-r-2 border-gray-300\"></div>\r\n          </div>\r\n          <div className=\"flex justify-between my-2\">\r\n            <div className=\"flex flex-col\">\r\n              <p className=\"font-dm text-xs font-medium text-gray-400 mb-1\">Net ROI</p>\r\n              <h4 className=\"flex items-center text-base font-medium\"><GetFormatedPnl value={totalReturns} showPercentage={true} /></h4>\r\n            </div>\r\n            <div className=\"divider border-r-2 border-gray-300\"></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex flex-col justify-between my-4 mx-4 sm:mx-0\">\r\n          <div className=\"flex justify-between my-2\">\r\n            <div className=\"flex flex-col\">\r\n              <p className=\"font-dm text-xs font-medium text-gray-400 mb-1\">Total Trades</p>\r\n              <h4 className=\"text-base font-medium dark:text-white\">{totalTrades}</h4>\r\n            </div>\r\n            <div className=\"divider sm:border-r-2 sm:border-gray-300\"></div>\r\n          </div>\r\n          <div className=\"flex justify-between my-2\">\r\n            <div className=\"flex flex-col\">\r\n              <p className=\"font-dm text-xs font-medium text-gray-400 mb-1\">Total Profit</p>\r\n              <h4 className=\"flex items-center text-base font-medium\"><GetFormatedPnl value={totalProfit} /></h4>\r\n            </div>\r\n            <div className=\"divider sm:border-r-2 sm:border-gray-300\"></div>\r\n          </div>\r\n          <div className=\"flex justify-between my-2\">\r\n            <div className=\"flex flex-col\">\r\n              <p className=\"font-dm text-xs font-medium text-gray-400 mb-1\">Total Loss</p>\r\n              <h4 className=\"flex items-center text-base font-medium\"><GetFormatedPnl value={totalLoss} /></h4>\r\n            </div>\r\n            <div className=\"divider sm:border-r-2 sm:border-gray-300\"></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex flex-col justify-between my-4 mx-4 sm:mx-0\">\r\n          <div className=\"flex justify-between my-2\">\r\n            <div className=\"flex flex-col\">\r\n              <p className=\"font-dm text-xs font-medium text-gray-400 mb-1\">Average P&L</p>\r\n              <h4 className=\"flex items-center text-base font-medium\"><GetFormatedPnl value={averageTradePnl} /></h4>\r\n            </div>\r\n            <div className=\"divider border-r-2 border-gray-300\"></div>\r\n          </div>\r\n          <div className=\"flex justify-between my-2\">\r\n            <div className=\"flex flex-col\">\r\n              <p className=\"font-dm text-xs font-medium text-gray-400 mb-1\">Max Profit</p>\r\n              <h4 className=\"flex items-center text-base font-medium\"><GetFormatedPnl value={maximumProfit} /></h4>\r\n            </div>\r\n            <div className=\"divider border-r-2 border-gray-300\"></div>\r\n          </div>\r\n          <div className=\"flex justify-between my-2\">\r\n            <div className=\"flex flex-col\">\r\n              <p className=\"font-dm text-xs font-medium text-gray-400 mb-1\">Max Loss</p>\r\n              <h4 className=\"flex items-center text-base font-medium\"><GetFormatedPnl value={maximumLoss} /></h4>\r\n            </div>\r\n            <div className=\"divider border-r-2 border-gray-300\"></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex flex-col justify-between my-4 mx-4 sm:mx-0\">\r\n          <div className=\"flex justify-between my-2\">\r\n            <div className=\"flex flex-col\">\r\n              <p className=\"font-dm text-xs font-medium text-gray-400 mb-1\">Commission & Fees</p>\r\n              <h4 className=\"text-base font-medium dark:text-white\">{totalCommissionsFees}</h4>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex justify-between my-2\">\r\n            <div className=\"flex flex-col\">\r\n              <p className=\"font-dm text-xs font-medium text-gray-400 mb-1\">Profit Factor</p>\r\n              <h4 className=\"text-base font-medium dark:text-white\">{profitFactor}</h4>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex justify-between my-2\">\r\n            <div className=\"flex flex-col\">\r\n              <p className=\"font-dm text-xs font-medium text-gray-400 mb-1\">Risk & Reward</p>\r\n              <h4 className=\"text-base font-medium dark:text-white\">{totalRR}</h4>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex flex-col\">\r\n        <h3 className='text-base font-medium dark:text-white mb-2'>Total P&L</h3>\r\n        <div className=\"rounded-md border border-gray-200 dark:border-gray-900 shadow-sm bg-white dark:bg-main-dark\">\r\n          <div className=\"flex m-4 mt-6\">\r\n            <h5 className=\"flex items-center justify-center leading-none text-base font-medium pb-2\">\r\n              <GetFormatedPnl value={totalPnl} showIcon={true} />\r\n              <div className='ml-2'></div>\r\n              <GetFormatedPnl value={totalReturns} showPercentage={true} showPlusMinus={false} showBracket={true} />\r\n            </h5>\r\n          </div>\r\n          <div className=\"w-full p-4 md:p-6 md:pt-0\">\r\n            <TotalPnlChart />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Overview\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useGetDailyPnlReturnsQuery } from 'state/api/charts/chartsApi';\r\n// third-party\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\n// chart options\r\nconst ReturnsChartOptions = {\r\n    chart: {\r\n        type: 'bar',\r\n        height: 350,\r\n        toolbar: {\r\n            show: false\r\n        }\r\n    },\r\n    colors: [\"#089981\"],\r\n    plotOptions: {\r\n        bar: {\r\n            colors: {\r\n                ranges: [{\r\n                    from: -1000000,\r\n                    to: 0,\r\n                    color: '#f23645'\r\n                }]\r\n            },\r\n            columnWidth: '45%',\r\n            borderRadius: 4\r\n        }\r\n    },\r\n    dataLabels: {\r\n        enabled: false,\r\n    },\r\n    xaxis: {\r\n        type: 'datetime',\r\n        labels: {\r\n            rotate: -90\r\n        }\r\n    },\r\n};\r\n\r\n// ==============================|| Analytics Returns CHART ||============================== //\r\n\r\nconst ReturnsChart = () => {\r\n\r\n    const id = useSelector((state) => state.account?.selectedAccount?.AccountId);\r\n    const { data, isLoading } = useGetDailyPnlReturnsQuery(id, {\r\n        refetchOnMountOrArgChange: true,\r\n        skip: !id,\r\n    });\r\n\r\n    const [series, setSeries] = useState([]);\r\n\r\n    const [options, setOptions] = useState(ReturnsChartOptions);\r\n\r\n    const currentMode = useSelector((state) => state.global.mode);\r\n\r\n    useEffect(() => {\r\n        setOptions((prevState) => ({\r\n            ...prevState,\r\n            grid: {\r\n                borderColor: `${currentMode === 'light' ? '#e5e7eb' : '#4b5563'}`,\r\n            },\r\n            xaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: `${currentMode === 'light' ? '#111827' : '#9ca3af'}`,\r\n                    }\r\n                },\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: `${currentMode === 'light' ? '#111827' : '#9ca3af'}`,\r\n                    }\r\n                }\r\n            }\r\n        }));\r\n\r\n        if (data) {\r\n            setOptions((prevState) => ({\r\n                ...prevState,\r\n                xaxis: {\r\n                    categories: data?.journalDates\r\n                },\r\n                yaxis: {\r\n                    title: {\r\n                        text: 'Growth',\r\n                    },\r\n                    labels: {\r\n                        formatter: function (y) {\r\n                            return parseFloat(y).toFixed(2) + \"%\";\r\n                        }\r\n                    }\r\n                },\r\n            }));\r\n\r\n            setSeries([{\r\n                name: 'Daily Returns',\r\n                data: data?.TotalRoi\r\n            }]);\r\n        }\r\n\r\n    }, [currentMode, data, isLoading]);\r\n\r\n\r\n    return <ReactApexChart options={options} series={series} type=\"bar\" height={365} />;\r\n};\r\n\r\nexport default ReturnsChart;\r\n","import React from 'react';\r\nimport { KeyValueTable } from 'components/common/table';\r\nimport { useGetDetailedStatisticsQuery } from 'state/api/trade/tradeApi';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst DetailedStats = () => {\r\n\r\n  const id = useSelector((state) => state.account?.selectedAccount?.AccountId);\r\n  const type = 'detailed';\r\n  const { data, isLoading } = useGetDetailedStatisticsQuery({\r\n    id,\r\n    type: \"detailed\"\r\n  }, {\r\n    refetchOnMountOrArgChange: true,\r\n  });\r\n\r\n  const stats_data = data\r\n    ? Object.entries(data).map(([key, value]) => {\r\n      const formattedKey = key.split(/(?=[A-Z])/).join(' ');\r\n      return { key: formattedKey, value: value };\r\n    }) : [];\r\n\r\n  return (\r\n    <>\r\n      <div className='headings p-4'>\r\n        <h3 className=\"text-base font-semibold dark:text-white\">YOUR STATS</h3>\r\n        <span className=\"text-sm font-medium dark:text-white\">(All Dates)</span>\r\n      </div>\r\n      <div className=\"grid gap-y-6 md:grid-cols-2 p-4 text-sm font-medium gap-x-8\">\r\n        <KeyValueTable data={stats_data?.slice(0, 16)} />\r\n        <KeyValueTable data={stats_data?.slice(16, 32)} />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DetailedStats;","import React from 'react'\r\nimport ReturnsChart from 'components/charts/ReturnsChart';\r\nimport DetailedStats from './statistics';\r\nimport { GetFormatedPnl } from 'helpers/format';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Detailed = () => {\r\n\r\n  const data = useSelector((state) => state.account?.stats, []);\r\n  const { netDailyPnl, totalReturns } = data || [];\r\n\r\n  return (\r\n    <>\r\n      <div className=\"h-auto my-4 bg-white dark:bg-main-dark rounded-md shadow-sm\">\r\n        <DetailedStats />\r\n      </div>\r\n      <div className=\"flex flex-col\">\r\n        <h3 className='text-base font-medium dark:text-white mb-2'>Daily Returns</h3>\r\n        <div className=\"rounded-md border border-gray-200 dark:border-gray-900 shadow-sm bg-white dark:bg-main-dark\">\r\n          <div className=\"flex m-4 mt-6\">\r\n            <h5 className=\"flex items-center justify-center leading-none text-base font-medium pb-2\">\r\n              <GetFormatedPnl value={netDailyPnl} showIcon={true} />\r\n              <div className='ml-2'></div>\r\n              <GetFormatedPnl value={totalReturns} showPercentage={true} showPlusMinus={false} showBracket={true} />\r\n            </h5>\r\n            <p className=\"text-base font-normal text-gray-500 dark:text-gray-400\"></p>\r\n          </div>\r\n          <div className=\"w-full p-4 md:p-6 md:pt-0\">\r\n            <ReturnsChart />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Detailed;\r\n","import React, { useState } from 'react';\r\nimport Overview from './components/overview';\r\nimport Detailed from './components/detailed';\r\n\r\nconst Analytics = () => {\r\n\r\n  const [showTab, setShowTab] = useState(false);\r\n\r\n  const activeTab = \"inline-block p-4 border-b-2 rounded-t-lg text-brand-100 border-brand-100 active dark:text-white dark:border-brand-200\";\r\n  const inActiveTab = \"inline-block p-4 border-b-2 rounded-t-lg border-transparent hover:text-gray-600 hover:border-gray-300 dark:hover:text-gray-300\";\r\n\r\n  return (\r\n    <section className='my-6 md:my-4'>\r\n      <div className=\"text-xs font-semibold text-center text-gray-500 border-b border-gray-200 dark:text-gray-400 dark:border-gray-700\">\r\n        <ul className=\"flex flex-nowrap overflow-x-auto no-scrollbar -mb-px\">\r\n          <li className=\"mr-2\">\r\n            <button className={showTab ? inActiveTab : activeTab} onClick={() => setShowTab(!showTab)}>OVERVIEW</button>\r\n          </li>\r\n          <li className=\"mr-2\">\r\n            <button className={showTab ?  activeTab : inActiveTab} onClick={() => setShowTab(!showTab)}>DETAILED</button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      {showTab ? <Detailed /> : <Overview />}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Analytics;\r\n","import apiSlice from \"state/api\";\r\nimport { SetLoadingWithResults } from \"helpers\";\r\n\r\nconst chartApiSlice = apiSlice.injectEndpoints({\r\n    endpoints: builder => ({\r\n        getTotalPnl: builder.query({\r\n            query: (id = 0) => `trade/${id}/getTotalPnlStats`,\r\n            async onQueryStarted(args, { queryFulfilled, dispatch }) {\r\n                try {\r\n                    await SetLoadingWithResults(queryFulfilled, dispatch);\r\n                } catch (err) {\r\n                    return;\r\n                }\r\n            },\r\n            transformResponse: (response) => response.success ? response.tradeStats : [],\r\n            providesTags: [\"Charts\"]\r\n        }),\r\n        getDailyPnlReturns: builder.query({\r\n            query: (id = 0) => `trade/${id}/getDailyStats`,\r\n            async onQueryStarted(args, { queryFulfilled, dispatch }) {\r\n                try {\r\n                    await SetLoadingWithResults(queryFulfilled, dispatch);\r\n                } catch (err) {\r\n                    return;\r\n                }\r\n            },\r\n            transformResponse: (response) => response.success ? response.stats : [],\r\n            providesTags: [\"Charts\"]\r\n        }),\r\n        getWeeklyPnl: builder.query({\r\n            query: (id = 0) => `trade/${id}/getWeeklyStats`,\r\n            async onQueryStarted(args, { queryFulfilled, dispatch }) {\r\n                try {\r\n                    await SetLoadingWithResults(queryFulfilled, dispatch);\r\n                } catch (err) {\r\n                    return;\r\n                }\r\n            },\r\n            transformResponse: (response) => response.success ? response.weeklyPnl : [],\r\n            providesTags: [\"Charts\"]\r\n        }),\r\n        getMonthlyPnl: builder.query({\r\n            query: (id = 0) => `trade/${id}/getMonthlyStats`,\r\n            async onQueryStarted(args, { queryFulfilled, dispatch }) {\r\n                try {\r\n                    await SetLoadingWithResults(queryFulfilled, dispatch);\r\n                } catch (err) {\r\n                    return;\r\n                }\r\n            },\r\n            transformResponse: (response) => response.success ? response.monthlyStats : [],\r\n            providesTags: [\"Charts\"]\r\n        }),\r\n    }),\r\n    overrideExisting: true\r\n});\r\n\r\nexport const { useGetTotalPnlQuery, useGetWeeklyPnlQuery, useGetMonthlyPnlQuery, useGetDailyPnlReturnsQuery } = chartApiSlice;"],"names":["KeyValueTable","props","data","_jsx","className","children","map","item","index","_jsxs","concat","key","value","DefaultTable","columns","isEdit","handleClick","handleEditClick","handleDeleteClick","Id","table","useReactTable","getCoreRowModel","getHeaderGroups","headerGroup","headers","header","isPlaceholder","flexRender","column","columnDef","getContext","id","scope","getRowModel","rows","length","row","i","onClick","_row$original","original","getVisibleCells","cell","_row$original2","MdEdit","_row$original3","MdDeleteOutline","colSpan","GetFormatedCurrency","_props$value","amount","useSelector","state","account","selectedCurrency","parseFloat","toFixed","_Fragment","GetFormatedPnl","_props$value2","_props$showCurrency","showCurrency","_props$showPlusMinus","showPlusMinus","_props$showPercentage","showPercentage","_props$showIcon","showIcon","_props$showBracket","showBracket","currency","conVal","parseInt","output","Math","abs","AiFillCaretDown","AiFillCaretUp","WinrateChartOptions","chart","type","offsetY","sparkline","enabled","colors","plotOptions","radialBar","startAngle","endAngle","track","background","strokeWidth","margin","dataLabels","name","show","fontSize","grid","padding","top","stroke","lineCap","fill","gradient","shade","shadeIntensity","inverseColors","opacityFrom","opacityTo","stops","labels","_data$winrate","_state$account","stats","winrate","_useState","useState","series","_slicedToArray","_useState3","_useState4","options","setOptions","currentMode","global","mode","useEffect","prevState","_objectSpread","color","ReactApexChart","height","width","areaChartOptions","toolbar","curve","strokeDashArray","_state$account$select","selectedAccount","AccountId","_useGetTotalPnlQuery","useGetTotalPnlQuery","refetchOnMountOrArgChange","skip","isLoading","_useState2","setSeries","borderColor","xaxis","style","yaxis","tooltip","y","formatter","val","_ref","totalPnl","totalRevenue","totalReturns","totalTrades","totalProfit","totalLoss","averageTradePnl","maximumProfit","maximumLoss","totalCommissionsFees","profitFactor","totalRR","CircleChart","TotalPnlChart","ReturnsChartOptions","bar","ranges","from","to","columnWidth","borderRadius","rotate","_useGetDailyPnlReturn","useGetDailyPnlReturnsQuery","categories","journalDates","title","text","TotalRoi","_useGetDetailedStatis","useGetDetailedStatisticsQuery","stats_data","Object","entries","_ref2","split","join","slice","netDailyPnl","DetailedStats","ReturnsChart","showTab","setShowTab","activeTab","inActiveTab","Detailed","Overview","chartApiSlice","apiSlice","injectEndpoints","endpoints","builder","getTotalPnl","query","arguments","undefined","onQueryStarted","args","_asyncToGenerator","_regeneratorRuntime","mark","_callee","queryFulfilled","dispatch","wrap","_context","prev","next","SetLoadingWithResults","t0","abrupt","stop","transformResponse","response","success","tradeStats","providesTags","getDailyPnlReturns","_callee2","_context2","getWeeklyPnl","_ref3","_callee3","_context3","weeklyPnl","getMonthlyPnl","_ref4","_callee4","_context4","monthlyStats","overrideExisting","useGetWeeklyPnlQuery","useGetMonthlyPnlQuery"],"sourceRoot":""}