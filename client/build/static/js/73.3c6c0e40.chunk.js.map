{"version":3,"file":"static/js/73.3c6c0e40.chunk.js","mappings":"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","sources":["components/common/buttons/index.jsx","components/common/inputs/InputField.jsx","helpers/validation.js","pages/trades/AddTrade/variables/FormVariables.js","pages/trades/AddTrade/index.jsx"],"sourcesContent":["import React, { forwardRef } from \"react\"\r\n\r\nexport const Button = forwardRef(({ className, ...props }, ref) => (\r\n\r\n    <button\r\n    className=\"w-full px-5 py-2.5 text-sm sm:text-base font-medium text-center text-white bg-brand-300 rounded-lg hover:bg-brand-200\"\r\n    ref={ref}\r\n    {...props}></button>\r\n\r\n));\r\n\r\nexport const SubmitButton = forwardRef(({ className, ...props }, ref) => (\r\n\r\n    <button\r\n    type=\"submit\"\r\n    className=\"inline-flex items-center px-5 py-2 text-sm font-medium text-center text-white bg-brand-300 rounded-lg hover:bg-brand-200\"\r\n    ref={ref}\r\n    {...props}></button>\r\n\r\n));\r\n\r\nexport const DeleteButton = forwardRef(({ className, ...props }, ref) => (\r\n\r\n    <button\r\n    type=\"submit\"\r\n    className=\"inline-flex items-center px-5 py-2.5 text-sm font-medium text-center text-red border border-red rounded-lg hover:bg-red hover:text-white\"\r\n    ref={ref}\r\n    {...props}></button>\r\n\r\n));\r\n\r\nexport const ResetButton = forwardRef(({ className, ...props }, ref) => (\r\n\r\n    <button\r\n    type=\"reset\" \r\n    className=\"inline-flex items-center px-5 py-2 mr-4 text-sm font-medium text-center text-white bg-gray-500 rounded-lg hover:bg-gray-600\"\r\n    ref={ref}\r\n    {...props}></button>\r\n\r\n));\r\n\r\nexport const IconButton = forwardRef(({ className, ...props }, ref) => (\r\n\r\n    <button\r\n    type=\"button\" \r\n    className={`bg-white hover:bg-gray-200 dark:bg-main-dark dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white font-medium rounded-lg text-sm px-4 py-2 text-center inline-flex justify-between items-center shadow-md m-2`}\r\n    ref={ref}\r\n    {...props}></button>\r\n\r\n));\r\n","// Custom components\r\nimport React from \"react\";\r\n\r\nfunction InputField(props) {\r\n    const { label, id, type, placeholder, disabled, handleChange, htmlName, value, errorMsg } = props;\r\n\r\n    let inputClass = \"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-100 focus:border-primary-100 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-100 dark:focus:border-primary-100\";\r\n\r\n    const errorClass = \"bg-red-50 border border-red-500 text-red-900 placeholder-red-700 text-sm rounded-lg focus:ring-red-500 dark:bg-gray-700 focus:border-red-500 block w-full p-2.5 dark:text-red-500 dark:placeholder-red-500 dark:border-red-500\";\r\n\r\n    if(type === \"file\") inputClass = \"block w-full text-sm text-gray-900 border border-gray-300 rounded-lg cursor-pointer bg-gray-50 dark:text-gray-400 focus:outline-none dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400\";\r\n\r\n    return (\r\n        <>\r\n            <label htmlFor={id} className={`block mb-2 text-sm font-medium ${errorMsg ? `text-red-700 dark:text-red-500` : `text-gray-900 dark:text-white`}`}>{label}</label>\r\n            {type === \"textArea\"\r\n                ? <textarea id={id} rows=\"8\" className=\"block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white\" placeholder={placeholder}></textarea>\r\n                : <input disabled={disabled} type={type} id={id} placeholder={placeholder} value={value} className={errorMsg ? errorClass : inputClass} name={htmlName} onChange={handleChange} />}\r\n            {errorMsg && <p className=\"mt-2 text-sm text-red-600 dark:text-red-500\"><span className=\"font-medium\">{errorMsg}</span></p>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default InputField;","import * as Yup from 'yup';\r\n\r\nconst SignUpSchema = Yup.object().shape({\r\n  Email: Yup.string().email().required(\"Email is required\"),\r\n  UserName: Yup.string()\r\n    .min(2, \"Too Short!\")\r\n    .max(50, \"Too Long!\")\r\n    .required(\"Username is required\"),\r\n  Password: Yup.string()\r\n    .required(\"Password is required\")\r\n    .min(8, \"too short - should be 8 chars minimum\"),\r\n  ConfirmPassword: Yup.string()\r\n    .required(\"You should repeat the password\")\r\n    .oneOf([Yup.ref('Password'), null], 'Type the correct password'),\r\n});\r\n\r\nconst SignInSchema = Yup.object().shape({\r\n  Email: Yup.string().email().required(\"Email is required\"),\r\n  Password: Yup.string().required(\"Password is required\")\r\n    .min(8, \"too short - should be 8 chars minimum\")\r\n});\r\n\r\nconst AccountSchema = Yup.object().shape({\r\n  AccountName: Yup.string().required(\"Account Name is required\"),\r\n  Market: Yup.string().required(\"Select Market\"),\r\n  Broker: Yup.string().required(\"Select Broker\"),\r\n  InitialBalance: Yup.number().positive().integer().required(\"Initial Balance is required\"),\r\n  Currency: Yup.string().required(\"Select Currency\")\r\n});\r\n\r\nconst TagSchema = Yup.object().shape({\r\n  TagName: Yup.string().required(\"Tag Name is required\"),\r\n  TagType: Yup.string().required(\"Select Tag Type\"),\r\n  TagDesc: Yup.string().required(\"Tag Description is required\")\r\n});\r\n\r\nconst TradeSchema = Yup.object().shape({\r\n  Account: Yup.string().required(\"Select Account\"),\r\n  Market: Yup.string().required(\"Select Market\"),\r\n  Broker: Yup.string().required(\"Select Broker\"),\r\n  Setup: Yup.string().required(\"Select Setup\"),\r\n  Symbol: Yup.string().required(\"Symbol is required\"),\r\n  EntryDate: Yup.date().required(\"Entry Date is required\"),\r\n  ExitDate: Yup.date().required(\"Exit Date is required\").min(Yup.ref('EntryDate')),\r\n  EntryPrice: Yup.number().positive().integer().required(\"Entry Price is required\"),\r\n  ExitPrice: Yup.number().positive().integer().required(\"Initial Balance is required\"),\r\n  StopLoss: Yup.number().positive().integer().required(\"Stop Loss is required\"),\r\n  Quantity: Yup.number().positive().integer().required(\"Quantity is required\")\r\n});\r\n\r\n\r\nexport { SignUpSchema, SignInSchema, AccountSchema, TagSchema, TradeSchema };","export const Inputs = {\r\n    //Basic Form Inputs\r\n    FormInputs: [\r\n        {\r\n            id: \"Symbol\",\r\n            label: \"Symbol\",\r\n            divClass: \"sm:col-span-2\",\r\n            placeholder: \"Ex.: Apple\",\r\n            type: \"text\",\r\n        },\r\n        {\r\n            id: \"EntryDate\",\r\n            label: \"Entry Date\",\r\n            divClass: \"w-full\",\r\n            placeholder: \"Select Date\",\r\n            type: \"datetime-local\",\r\n        },\r\n        {\r\n            id: \"ExitDate\",\r\n            label: \"Exit Date\",\r\n            divClass: \"w-full\",\r\n            placeholder: \"Select Date\",\r\n            type: \"datetime-local\",\r\n        },\r\n        {\r\n            id: \"EntryPrice\",\r\n            label: \"Entry Price\",\r\n            divClass: \"w-full\",\r\n            placeholder: \"Ex.: 100\",\r\n            type: \"number\",\r\n        },\r\n        {\r\n            id: \"ExitPrice\",\r\n            label: \"Exit Price\",\r\n            divClass: \"w-full\",\r\n            placeholder: \"Ex.: 120\",\r\n            type: \"number\",\r\n        },\r\n        {\r\n            id: \"StopLoss\",\r\n            label: \"Stop Loss\",\r\n            divClass: \"w-full\",\r\n            placeholder: \"Ex.: 90\",\r\n            type: \"number\",\r\n        },\r\n        {\r\n            id: \"Quantity\",\r\n            label: \"Quantity\",\r\n            divClass: \"w-full\",\r\n            placeholder: \"Ex.: 200\",\r\n            type: \"number\",\r\n        },\r\n    ],\r\n    //Form Additional Inputs\r\n    FormAddInputs: [\r\n        {\r\n            id: \"EntryReason\",\r\n            label: \"Entry Reason\",\r\n            divClass: \"sm:col-span-2\",\r\n            placeholder: \"Ex.: Setup Created\",\r\n            type: \"text\",\r\n        },\r\n        {\r\n            id: \"ExitReason\",\r\n            label: \"Exit Reason\",\r\n            divClass: \"sm:col-span-2\",\r\n            placeholder: \"Ex.: Target Hit\",\r\n            type: \"text\",\r\n        },\r\n        {\r\n            id: \"null\",\r\n            label: \"\",\r\n            divClass: \"\",\r\n            placeholder: \"\",\r\n            type: \"\"\r\n        },\r\n        {\r\n            id: \"ScreenShot\",\r\n            label: \"Upload Screenshot\",\r\n            divClass: \"sm:col-span-2\",\r\n            placeholder: \"\",\r\n            type: \"file\"\r\n        },\r\n        {\r\n            id: \"AddInfo\",\r\n            label: \"Additional Information\",\r\n            divClass: \"sm:col-span-2\",\r\n            placeholder: \"Your description here\",\r\n            type: \"textArea\",\r\n        },\r\n    ],\r\n    //Form Dropdowns\r\n    FormDropdown: [\r\n        {\r\n            id: \"Market\",\r\n            label: \"Market\",\r\n            children: [\r\n                \"Select Market\",\r\n                \"STOCKS\",\r\n                \"FOREX\",\r\n                \"CRYPTO\",\r\n                \"OTIONS\",\r\n                \"FUTURES\",\r\n            ],\r\n        },\r\n        {\r\n            id: \"Broker\",\r\n            label: \"Broker\",\r\n            children: [\r\n                \"Select Broker\",\r\n                \"ZERODHA\",\r\n                \"ANGLE ONE\",\r\n                \"UPSTOX\",\r\n                \"DHAN\",\r\n            ],\r\n        },\r\n        {\r\n            id: \"Setup\",\r\n            label: \"Setup\",\r\n            children: [\r\n                \"Select Setup\",\r\n                \"Random\",\r\n            ],\r\n        },\r\n        {\r\n            id: \"Status\",\r\n            label: \"Status\",\r\n            children: [\r\n                \"Closed\",\r\n                \"Open\",\r\n            ],\r\n        },\r\n        {\r\n            id: \"Action\",\r\n            label: \"Action\",\r\n            children: [\r\n                \"Buy\",\r\n                \"Sell\",\r\n            ],\r\n        },\r\n    ],\r\n    //Form Additional Dropdown\r\n    FormAddDropdown: [\r\n        {\r\n            id: \"Emotions\",\r\n            label: \"Emotions\",\r\n            children: [\r\n                \"Select Emotions\",\r\n                \"Normal\",\r\n                \"Fear\",\r\n                \"Greed\",\r\n                \"Impatience\",\r\n            ],\r\n        },\r\n        {\r\n            id: \"MarketConditions\",\r\n            label: \"Market Conditions\",\r\n            children: [\r\n                \"Select Market Conditions\",\r\n                \"Fiat\",\r\n                \"Sideways\",\r\n                \"Trending\",\r\n                \"Volatile\",\r\n            ],\r\n        },\r\n    ],\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { BiChevronDown, BiChevronUp } from \"react-icons/bi\";\r\nimport InputField from 'components/common/inputs/InputField';\r\nimport Dropdown from 'components/common/dropdown';\r\nimport { SubmitButton, ResetButton } from 'components/common/buttons';\r\nimport { Inputs } from \"./variables/FormVariables\";\r\nimport { TradeSchema } from 'helpers/validation';\r\nimport { useFormik } from \"formik\";\r\nimport { AccountDropdown } from 'components/common/dropdown/accountDropdown';\r\nimport { useAddUpadateTradeMutation, useGetTradeDetailsQuery } from 'state/api/trade/tradeApi';\r\nimport { formatDate } from 'utils';\r\n\r\nconst AddTrade = () => {\r\n\r\n    const tradeId = new URLSearchParams(useLocation().search).get('id');\r\n\r\n    const { data: TradeInfo, isLoading: isLoadingTrade } = useGetTradeDetailsQuery(tradeId, {\r\n        skip: !tradeId,\r\n    });\r\n\r\n    const initialValues = TradeInfo\r\n        ? { ...TradeInfo }\r\n        : { Account: '', Market: '', Broker: '', Setup: '', TradeStatus: 'Closed', Action: 'Buy', Symbol: '', EntryDate: '', ExitDate: '', EntryPrice: '', ExitPrice: '', StopLoss: '', Quantity: '', EntryReason: '', ExitReason: '', Emotions: '', MarketConditions: '', AdditionalInformation: '' };\r\n\r\n    const { values, errors, touched, isSubmitting, handleChange, handleSubmit, handleBlur, setValues } = useFormik({\r\n        initialValues,\r\n        validationSchema: TradeSchema,\r\n        onSubmit: values => {\r\n            submitForm(values);\r\n        },\r\n    });\r\n\r\n    const [addUpdateTrade, { isLoading }] = useAddUpadateTradeMutation();\r\n\r\n    useEffect(() => {\r\n        //Dynamically Setting the Values of form for Update Operation of Trade.\r\n        TradeInfo && setValues(initialValues);\r\n\r\n    }, [TradeInfo, isLoadingTrade]);\r\n\r\n\r\n    const submitForm = async (formData) => {\r\n        try {\r\n            if (tradeId) formData.TradeId = parseInt(tradeId);\r\n            formData.AccountId = parseInt(formData.Account);\r\n            delete formData.Account;\r\n            await addUpdateTrade(formData).unwrap();\r\n        } catch (error) {\r\n            return;\r\n        }\r\n    }\r\n    const [showAdd, setShowAdd] = useState(false);\r\n\r\n    return (\r\n        <div className=\"flex justify-center items-center\">\r\n            <div className=\"w-full max-w-3xl p-6 mt-8 space-y-8 sm:p-8 bg-white rounded-lg shadow dark:bg-main-dark\">\r\n                <section>\r\n                    <div className=\"py-8 px-1 max-w-2xl lg:py-2\">\r\n                        <h2 className=\"pb-4 mb-4 sm:mb-5 text-xl border-b font-bold text-gray-900 dark:text-white dark:border-gray-600\">Trade Details</h2>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"grid gap-4 sm:grid-cols-2 sm:gap-6\">\r\n                                <div>\r\n                                    <AccountDropdown label={'Account'} htmlName={\"Account\"} errorMsg={errors.Account && touched.Account && errors.Account} onChange={handleChange} onBlur={handleBlur} value={values.Account} />\r\n                                </div>\r\n                                {/* Below Code is displaying mutiple form elements using javascript object */}\r\n                                {Inputs.FormDropdown.map((items) => (\r\n                                    <div key={items.id}>\r\n                                        <Dropdown label={items.label} id={items.id} htmlName={items.id} errorMsg={errors[items.id] && touched[items.id] && errors[items.id]} onChange={handleChange} onBlur={handleBlur} value={values[items.id]}\r\n                                            children={\r\n                                                items.children.map((child) => (\r\n                                                    <option key={child}>{child}</option>\r\n                                                ))\r\n                                            } />\r\n                                    </div>\r\n                                ))}\r\n                                {Inputs.FormInputs.map((items) => (\r\n                                    <div key={items.id} className={items.divClass}>\r\n                                        <InputField label={items.label} divClass={items.divClass} placeholder={items.placeholder} id={items.id} type={items.type} htmlName={items.id} errorMsg={errors[items.id] && touched[items.id] && errors[items.id]} handleChange={handleChange} onBlur={handleBlur} value={items.id.includes(\"Date\") && values[items.id] ? formatDate(values[items.id], \"date-time\") : values[items.id]} />\r\n                                    </div>\r\n                                ))}\r\n                                {\r\n                                    showAdd &&\r\n                                    <div className=\"sm:col-span-2\">\r\n                                        <h2 className=\"pb-4 col-span-2 text-xl border-b font-bold text-gray-900 dark:text-white dark:border-gray-600\">Additional Details</h2>\r\n                                    </div>\r\n                                }\r\n\r\n                                {showAdd && Inputs.FormAddInputs.map((items) => (\r\n                                    items.id === \"null\" ?\r\n                                        Inputs.FormAddDropdown.map((dropdown) => (\r\n                                            <div key={dropdown.id}>\r\n                                                <Dropdown label={dropdown.label} id={dropdown.id} htmlName={items.id} errorMsg={errors[items.id] && touched[items.id] && errors[items.id]} onChange={handleChange} onBlur={handleBlur} value={values[items.id]}\r\n                                                    children={\r\n                                                        dropdown.children.map((child) => (\r\n                                                            <option key={child}>{child}</option>\r\n                                                        ))\r\n                                                    } />\r\n                                            </div>\r\n                                        )) :\r\n                                        <div key={items.id} className={items.divClass}>\r\n                                            <InputField label={items.label} divClass={items.divClass} placeholder={items.placeholder} id={items.id} type={items.type} htmlName={items.id} errorMsg={errors[items.id] && touched[items.id] && errors[items.id]} handleChange={handleChange} onBlur={handleBlur} value={values[items.id]} />\r\n                                        </div>\r\n                                ))}\r\n                            </div>\r\n\r\n                            <div className=\"flex flex-row items-center justify-center my-4 sm:my-8\">\r\n                                <button type='button' onClick={() => setShowAdd(!showAdd)} className=\"flex flex-col items-center justify-center\">\r\n                                    {showAdd && <BiChevronUp className=\"dark:text-white cursor-pointer\" />}\r\n                                    <h3 className=\"text-base dark:text-white cursor-pointer\">{showAdd ? \"Less\" : \"More\"}</h3>\r\n                                    {!showAdd && <BiChevronDown className=\"dark:text-white cursor-pointer\" />}\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div className=\"flex flex-row items-center\">\r\n                                <ResetButton type=\"reset\" id=\"reset\" className=\"inline-flex items-center px-5 py-2.5 mr-4 text-xs sm:text-sm font-medium text-center text-white bg-gray-500 rounded-lg hover:bg-gray-600\">Reset</ResetButton>\r\n                                <SubmitButton type=\"submit\" id=\"importTrade\" disabled={isSubmitting}>Submit</SubmitButton>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTrade;"],"names":["Button","forwardRef","_ref","ref","className","props","_objectWithoutProperties","_excluded","_jsx","_objectSpread","SubmitButton","_ref2","_excluded2","type","DeleteButton","_ref3","_excluded3","ResetButton","_ref4","_excluded4","IconButton","_ref5","_excluded5","label","id","placeholder","disabled","handleChange","htmlName","value","errorMsg","inputClass","_jsxs","_Fragment","children","htmlFor","concat","rows","name","onChange","SignUpSchema","Yup","shape","Email","email","required","UserName","min","max","Password","ConfirmPassword","oneOf","SignInSchema","AccountSchema","AccountName","Market","Broker","InitialBalance","positive","integer","Currency","TagSchema","TagName","TagType","TagDesc","TradeSchema","Account","Setup","Symbol","EntryDate","ExitDate","EntryPrice","ExitPrice","StopLoss","Quantity","Inputs","FormInputs","divClass","FormAddInputs","FormDropdown","FormAddDropdown","tradeId","URLSearchParams","useLocation","search","get","_useGetTradeDetailsQu","useGetTradeDetailsQuery","skip","TradeInfo","data","isLoadingTrade","isLoading","initialValues","TradeStatus","Action","EntryReason","ExitReason","Emotions","MarketConditions","AdditionalInformation","_useFormik","useFormik","validationSchema","onSubmit","values","submitForm","errors","touched","isSubmitting","handleSubmit","handleBlur","setValues","_useAddUpadateTradeMu","useAddUpadateTradeMutation","_useAddUpadateTradeMu2","_slicedToArray","addUpdateTrade","useEffect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","formData","wrap","_context","prev","next","TradeId","parseInt","AccountId","unwrap","t0","abrupt","stop","_x","apply","arguments","_useState","useState","_useState2","showAdd","setShowAdd","AccountDropdown","onBlur","map","items","Dropdown","child","InputField","includes","formatDate","dropdown","onClick","BiChevronUp","BiChevronDown"],"sourceRoot":""}