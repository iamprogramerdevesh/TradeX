{"version":3,"file":"static/js/627.d086f715.chunk.js","mappings":"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","sources":["components/common/buttons/index.jsx","components/common/inputs/InputField.jsx","components/common/statusPill/index.jsx","components/common/table/columns.jsx","components/common/table/index.jsx","helpers/format.js","helpers/validation.js","pages/settings/index.jsx","state/api/tags/tagApi.js","pages/settings/tabs/forms/tagFrom.jsx","pages/settings/tabs/tags.jsx"],"sourcesContent":["import React, { forwardRef } from \"react\"\r\n\r\nexport const Button = forwardRef(({ className, ...props }, ref) => (\r\n\r\n    <button\r\n    className=\"w-full px-5 py-2.5 text-sm sm:text-base font-medium text-center text-white bg-brand-300 rounded-lg hover:bg-brand-200\"\r\n    ref={ref}\r\n    {...props}></button>\r\n\r\n));\r\n\r\nexport const SubmitButton = forwardRef(({ className, ...props }, ref) => (\r\n\r\n    <button\r\n    type=\"submit\"\r\n    className=\"inline-flex items-center px-5 py-2 text-sm font-medium text-center text-white bg-brand-300 rounded-lg hover:bg-brand-200\"\r\n    ref={ref}\r\n    {...props}></button>\r\n\r\n));\r\n\r\nexport const DeleteButton = forwardRef(({ className, ...props }, ref) => (\r\n\r\n    <button\r\n    type=\"submit\"\r\n    className=\"inline-flex items-center px-5 py-2.5 text-sm font-medium text-center text-red border border-red rounded-lg hover:bg-red hover:text-white\"\r\n    ref={ref}\r\n    {...props}></button>\r\n\r\n));\r\n\r\nexport const ResetButton = forwardRef(({ className, ...props }, ref) => (\r\n\r\n    <button\r\n    type=\"reset\" \r\n    className=\"inline-flex items-center px-5 py-2 mr-4 text-sm font-medium text-center text-white bg-gray-500 rounded-lg hover:bg-gray-600\"\r\n    ref={ref}\r\n    {...props}></button>\r\n\r\n));\r\n\r\nexport const IconButton = forwardRef(({ className, ...props }, ref) => (\r\n\r\n    <button\r\n    type=\"button\" \r\n    className={`bg-white hover:bg-gray-200 dark:bg-main-dark dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white font-medium rounded-lg text-sm px-4 py-2 text-center inline-flex justify-between items-center shadow-md m-2`}\r\n    ref={ref}\r\n    {...props}></button>\r\n\r\n));\r\n","// Custom components\r\nimport React from \"react\";\r\n\r\nfunction InputField(props) {\r\n    const { label, id, type, placeholder, disabled, handleChange, htmlName, value, errorMsg } = props;\r\n\r\n    let inputClass = \"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-100 focus:border-primary-100 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-100 dark:focus:border-primary-100\";\r\n\r\n    const errorClass = \"bg-red-50 border border-red-500 text-red-900 placeholder-red-700 text-sm rounded-lg focus:ring-red-500 dark:bg-gray-700 focus:border-red-500 block w-full p-2.5 dark:text-red-500 dark:placeholder-red-500 dark:border-red-500\";\r\n\r\n    if(type === \"file\") inputClass = \"block w-full text-sm text-gray-900 border border-gray-300 rounded-lg cursor-pointer bg-gray-50 dark:text-gray-400 focus:outline-none dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400\";\r\n\r\n    return (\r\n        <>\r\n            <label htmlFor={id} className={`block mb-2 text-sm font-medium ${errorMsg ? `text-red-700 dark:text-red-500` : `text-gray-900 dark:text-white`}`}>{label}</label>\r\n            {type === \"textArea\"\r\n                ? <textarea id={id} rows=\"8\" className=\"block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white\" placeholder={placeholder}></textarea>\r\n                : <input disabled={disabled} type={type} id={id} placeholder={placeholder} value={value} className={errorMsg ? errorClass : inputClass} name={htmlName} onChange={handleChange} />}\r\n            {errorMsg && <p className=\"mt-2 text-sm text-red-600 dark:text-red-500\"><span className=\"font-medium\">{errorMsg}</span></p>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default InputField;","import React from 'react'\r\nimport { classNames } from \"utils\";\r\n\r\nconst StatusPill = (props) => {\r\n    const { value } = props;\r\n    const status = value?.toLowerCase() || '';\r\n\r\n    return (\r\n        <span\r\n            className={\r\n                classNames(\r\n                    \"px-3 py-1 uppercase leading-wide font-bold text-xs rounded-xl shadow-sm\",\r\n                    status.startsWith(\"win\") ? \"border-2 border-green text-green\" : null,\r\n                    status.startsWith(\"pending\") ? \"bg-yellow-100 text-yellow-800\" : null,\r\n                    status.startsWith(\"loss\") ? \"border-2 border-red text-red\" : null,\r\n                )\r\n            }\r\n        >\r\n            {status}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default StatusPill;\r\n","import { classNames } from \"utils\";\r\nimport StatusPill from \"components/common/statusPill\";\r\nimport { formatDate } from \"utils\";\r\nimport { GetFormatedCurrency, GetFormatedPnl } from \"helpers/format\";\r\n\r\nexport const RecentTradeCols = [\r\n    {\r\n        accessorKey: \"Symbol\",\r\n        header: () => <span>Symbol</span>,\r\n        cell: ({ row }) => <div className=\"uppercase\">{row.getValue(\"Symbol\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"TradeStatus\",\r\n        header: () => <span>Status</span>,\r\n        cell: ({ row }) => (\r\n            <div className=\"capitalize\">\r\n                <StatusPill value={row.getValue(\"TradeStatus\")} />\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        accessorKey: \"EntryDate\",\r\n        header: () => <div className=\"capitalize\">Open Date</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{formatDate(row.getValue(\"EntryDate\"), 'dd/mm/yyyy')}</div>\r\n    },\r\n    {\r\n        accessorKey: \"ExitDate\",\r\n        header: () => <div className=\"capitalize\">Close Date</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{formatDate(row.getValue(\"ExitDate\"), 'dd/mm/yyyy')}</div>\r\n    },\r\n    {\r\n        accessorKey: \"Action\",\r\n        header: () => <div className=\"capitalize\">Action</div>,\r\n        cell: ({ row }) => <div className=\"uppercase\">{row.getValue(\"Action\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"NetPnL\",\r\n        header: () => <div className=\"capitalize text-center\">Net P&L</div>,\r\n        cell: ({ row }) => <div className=\"text-center whitespace-nowrap capitalize font-medium\"><GetFormatedPnl value={row.getValue(\"NetPnL\")} /></div>\r\n    },\r\n    {\r\n        accessorKey: \"NetRoi\",\r\n        header: () => <div className=\"capitalize text-center\">Net ROI</div>,\r\n        cell: ({ row }) => <div className=\"text-center whitespace-nowrap capitalize font-medium\"><GetFormatedPnl value={row.getValue(\"NetRoi\")} showPercentage={true} showCurrency={false} /></div>\r\n    },\r\n];\r\n\r\nexport const TradeColumns = [\r\n    {\r\n        accessorKey: \"Symbol\",\r\n        header: () => <span>Symbol</span>,\r\n        cell: ({ row }) => <div className=\"uppercase\">{row.getValue(\"Symbol\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"TradeStatus\",\r\n        header: () => <span>Status</span>,\r\n        cell: ({ row }) => (\r\n            <div className=\"capitalize\">\r\n                <StatusPill value={row.getValue(\"TradeStatus\")} />\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        accessorKey: \"EntryDate\",\r\n        header: () => <div className=\"capitalize\">Open Date</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{formatDate(row.getValue(\"EntryDate\"), 'dd/mm/yyyy')}</div>\r\n    },\r\n    {\r\n        accessorKey: \"ExitDate\",\r\n        header: () => <div className=\"capitalize\">Close Date</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{formatDate(row.getValue(\"ExitDate\"), 'dd/mm/yyyy')}</div>\r\n    },\r\n    {\r\n        accessorKey: \"Action\",\r\n        header: () => <div className=\"capitalize\">Action</div>,\r\n        cell: ({ row }) => <div className=\"uppercase\">{row.getValue(\"Action\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"NetPnL\",\r\n        header: () => <div className=\"capitalize\">Net P&L</div>,\r\n        cell: ({ row }) => <div className=\"flex items-center capitalize font-medium\"><GetFormatedPnl value={row.getValue(\"NetPnL\")} /></div>\r\n    },\r\n    {\r\n        accessorKey: \"NetRoi\",\r\n        header: () => <div className=\"capitalize\">Net ROI</div>,\r\n        cell: ({ row }) => <div className=\"flex items-center capitalize font-medium\"><GetFormatedPnl value={row.getValue(\"NetRoi\")} showPercentage={true} showCurrency={false} /></div>\r\n    },\r\n    {\r\n        accessorKey: \"EntryPrice\",\r\n        header: () => <div className=\"capitalize\">Entry Price</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\"><GetFormatedCurrency value={row.getValue(\"EntryPrice\")} /></div>\r\n    },\r\n    {\r\n        accessorKey: \"ExitPrice\",\r\n        header: () => <div className=\"capitalize\">Exit Price</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\"><GetFormatedCurrency value={row.getValue(\"ExitPrice\")} /></div>\r\n    },\r\n    {\r\n        accessorKey: \"StopLoss\",\r\n        header: () => <div className=\"capitalize\">Stop Loss</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\"><GetFormatedCurrency value={row.getValue(\"StopLoss\")} /></div>\r\n    },\r\n    {\r\n        accessorKey: \"Quantity\",\r\n        header: () => <div className=\"capitalize\">Quantity</div>,\r\n        cell: ({ row }) => <div className=\"capitalize font-medium\">{row.getValue(\"Quantity\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"Setup\",\r\n        header: () => <div className=\"capitalize\">Setup</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"Setup\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"EntryReason\",\r\n        header: () => <div className=\"capitalize\">Entry Reason</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"EntryReason\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"ExitReason\",\r\n        header: () => <div className=\"capitalize\">Exit Reason</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"ExitReason\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"Emotions\",\r\n        header: () => <div className=\"capitalize\">Emotions</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"Emotions\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"MarketCondition\",\r\n        header: () => <div className=\"capitalize\">Market Condition</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"MarketCondition\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"AdditionalInfo\",\r\n        header: () => <div className=\"capitalize\">Additional Info</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"AdditionalInfo\")}</div>\r\n    },\r\n];\r\n\r\nexport const AccountColumns = [\r\n    {\r\n        accessorKey: \"AccountName\",\r\n        header: () => <span>Account Name</span>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"AccountName\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"Broker\",\r\n        header: () => <span>Broker</span>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"Broker\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"InitialBalance\",\r\n        header: () => <span>Balance</span>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"InitialBalance\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"Currency\",\r\n        header: () => <span>Currency</span>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"Currency\")}</div>\r\n    },\r\n];\r\n\r\nexport const TagsColumns = [\r\n    {\r\n        accessorKey: \"TagName\",\r\n        header: () => <span>Tag Name</span>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"TagName\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"TagType\",\r\n        header: () => <span>Type</span>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"TagType\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"TagDesc\",\r\n        header: () => <span>Description</span>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"TagDesc\")}</div>\r\n    },\r\n];\r\n\r\nexport const ImportHistColumns = [\r\n    {\r\n        accessorKey: \"Imported On\",\r\n        header: () => <span>Imported On</span>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"Imported On\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"Broker Name\",\r\n        header: () => <span>Broker Name</span>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"Broker Name\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"Account Name\",\r\n        header: () => <span>Account Name</span>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"Account Name\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"Total Trades\",\r\n        header: () => <span>Total Trades</span>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"Total Trades\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"File\",\r\n        header: () => <span>File</span>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"File\")}</div>\r\n    },\r\n];","import React from \"react\";\r\nimport { flexRender, getCoreRowModel, useReactTable } from \"@tanstack/react-table\";\r\nimport { MdDeleteOutline, MdEdit } from \"react-icons/md\";\r\n\r\nexport const KeyValueTable = (props) => {\r\n\r\n    const { data } = props;\r\n\r\n    return (\r\n        <div className=\"relative overflow-x-auto no-scrollbar shadow-md dark:shadow-2xl\">\r\n            <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\r\n                <tbody>\r\n                    {data.map((item, index) => (\r\n                        <tr key={index} className={`border-b dark:border-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 ${index % 2 === 0 ? \"bg-gray-100 dark:bg-primary-dark\" : \"bg-white dark:bg-main-dark\"}`}>\r\n                            <td className=\"px-2 py-1 break-words capitalize\">{item.key}</td>\r\n                            <td className=\"px-2 py-1 break-words\">{item.value}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const DefaultTable = (props) => {\r\n\r\n    const { columns, data, isEdit, handleClick, handleEditClick, handleDeleteClick, Id } = props;\r\n\r\n    const table = useReactTable({\r\n        data,\r\n        columns,\r\n        getCoreRowModel: getCoreRowModel(),\r\n    })\r\n\r\n    return (\r\n        <div className=\"relative overflow-x-auto no-scrollbar shadow-md dark:shadow-2xl\">\r\n            <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\r\n                <thead className=\"text-md text-gray-700 uppercase bg-gray-200 dark:bg-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600\">\r\n                    {table.getHeaderGroups().map(headerGroup => (\r\n                        <tr key={headerGroup.id}>\r\n                            {headerGroup.headers.map(header => {\r\n                                return (\r\n                                    <th key={header.id} className=\"capitalize px-6 py-3 text-center whitespace-nowrap\">\r\n                                        {header.isPlaceholder\r\n                                            ? null\r\n                                            : flexRender(\r\n                                                header.column.columnDef.header,\r\n                                                header.getContext()\r\n                                            )}\r\n                                    </th>\r\n                                )\r\n                            })}\r\n                            {isEdit && <th scope=\"col\" className=\"capitalize px-6 py-3 text-center whitespace-nowrap\"></th>}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody>\r\n                    {table.getRowModel().rows.length ? (\r\n                        table.getRowModel().rows.map((row, i) => (\r\n                            <tr\r\n                                key={row.id}\r\n                                onClick={() => handleClick && handleClick(row?.original?.[Id])}\r\n                                className={`border-b dark:border-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 ${handleClick && 'cursor-pointer'} ${i % 2 === 0 ? \"bg-white dark:bg-main-dark\" : \"bg-gray-100 dark:bg-primary-dark\"}`}>\r\n                                {row.getVisibleCells().map((cell) => (\r\n                                    <td key={cell.id} className=\"px-6 py-4 text-center whitespace-nowrap\">\r\n                                        {flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n                                    </td>\r\n                                ))}\r\n\r\n                                {\r\n                                    isEdit && <td className=\"py-4 w-16 flex items-center justify-between\">\r\n                                        <button className=\"font-medium text-gray-900 dark:text-white hover:underline\" onClick={() => handleEditClick(row?.original?.[Id])}><MdEdit className=\"w-5 h-5\" /></button>\r\n                                        <button className=\"font-medium text-red-600 dark:text-red-500 hover:underline\" onClick={() => handleDeleteClick(row?.original?.[Id])}><MdDeleteOutline className=\"w-5 h-5\" /></button>\r\n                                    </td>\r\n                                }\r\n                            </tr>\r\n                        ))\r\n                    ) : (\r\n                        <tr className=\"text-center h-32\">\r\n                            <td colSpan={12}>No Record Found!</td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { AiFillCaretUp, AiFillCaretDown } from \"react-icons/ai\";\r\n\r\nexport const GetFormatedCurrency = (props) => {\r\n    const { value = 0 } = props;\r\n    const currency = useSelector((state) => state.account.selectedCurrency, []) || '';\r\n    const amount = currency + parseFloat(value).toFixed(2);\r\n\r\n    return (\r\n        <>\r\n            {amount}\r\n        </>\r\n    )\r\n}\r\n\r\nexport const GetFormatedPnl = (props) => {\r\n\r\n    const { value = 0, showCurrency = true, showPlusMinus = true, showPercentage = false, showIcon = false, showBracket = false } = props;\r\n    const currency = useSelector((state) => state.account.selectedCurrency, []) || '';\r\n\r\n    const conVal = parseInt(value);\r\n    const sign = showPlusMinus ? (conVal > 0 ? '+' : conVal < 0 ? '-' : '') : '';\r\n    const output = sign + ((showCurrency && !showPercentage) ? currency : '') + (Math.abs(parseFloat(value)).toFixed(2)) + (showPercentage ? '%' : '');\r\n\r\n    return (\r\n        <>\r\n            {showIcon ? (\r\n                conVal < 0 ? <AiFillCaretDown className=\"text-red mr-1\" /> : <AiFillCaretUp className=\"text-green mr-1\" />\r\n            ) : null}\r\n            <span className={conVal < 0 ? \"text-red\" : conVal > 0 ? \"text-green\" : 'dark:text-white'}>\r\n                {showBracket ? ('(' + output + ')') : output}\r\n            </span>\r\n        </>\r\n    )\r\n}\r\n","import * as Yup from 'yup';\r\n\r\nconst SignUpSchema = Yup.object().shape({\r\n  Email: Yup.string().email().required(\"Email is required\"),\r\n  UserName: Yup.string()\r\n    .min(2, \"Too Short!\")\r\n    .max(50, \"Too Long!\")\r\n    .required(\"Username is required\"),\r\n  Password: Yup.string()\r\n    .required(\"Password is required\")\r\n    .min(8, \"too short - should be 8 chars minimum\"),\r\n  ConfirmPassword: Yup.string()\r\n    .required(\"You should repeat the password\")\r\n    .oneOf([Yup.ref('Password'), null], 'Type the correct password'),\r\n});\r\n\r\nconst SignInSchema = Yup.object().shape({\r\n  Email: Yup.string().email().required(\"Email is required\"),\r\n  Password: Yup.string().required(\"Password is required\")\r\n    .min(8, \"too short - should be 8 chars minimum\")\r\n});\r\n\r\nconst AccountSchema = Yup.object().shape({\r\n  AccountName: Yup.string().required(\"Account Name is required\"),\r\n  Market: Yup.string().required(\"Select Market\"),\r\n  Broker: Yup.string().required(\"Select Broker\"),\r\n  InitialBalance: Yup.number().positive().integer().required(\"Initial Balance is required\"),\r\n  Currency: Yup.string().required(\"Select Currency\")\r\n});\r\n\r\nconst TagSchema = Yup.object().shape({\r\n  TagName: Yup.string().required(\"Tag Name is required\"),\r\n  TagType: Yup.string().required(\"Select Tag Type\"),\r\n  TagDesc: Yup.string().required(\"Tag Description is required\")\r\n});\r\n\r\nconst TradeSchema = Yup.object().shape({\r\n  Account: Yup.string().required(\"Select Account\"),\r\n  Market: Yup.string().required(\"Select Market\"),\r\n  Broker: Yup.string().required(\"Select Broker\"),\r\n  Setup: Yup.string().required(\"Select Setup\"),\r\n  Symbol: Yup.string().required(\"Symbol is required\"),\r\n  EntryDate: Yup.date().required(\"Entry Date is required\"),\r\n  ExitDate: Yup.date().required(\"Exit Date is required\").min(Yup.ref('EntryDate')),\r\n  EntryPrice: Yup.number().positive().integer().required(\"Entry Price is required\"),\r\n  ExitPrice: Yup.number().positive().integer().required(\"Initial Balance is required\"),\r\n  StopLoss: Yup.number().positive().integer().required(\"Stop Loss is required\"),\r\n  Quantity: Yup.number().positive().integer().required(\"Quantity is required\")\r\n});\r\n\r\n\r\nexport { SignUpSchema, SignInSchema, AccountSchema, TagSchema, TradeSchema };","import React from 'react'\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nimport routes from \"routes/routes\";\r\nimport { classNames } from \"utils\";\r\n\r\nconst TabPanel = () => {\r\n\r\n    // Check if the current location is active\r\n    const location = useLocation();\r\n    const isActive = (routeName) => location.pathname.includes(routeName);\r\n\r\n    return (\r\n        <section className=\"sm:flex flex-col justify-center items-center\">\r\n            <div>\r\n                <div className=\"my-3 mt-6\">\r\n                    <span className='text-xs font-medium text-gray-500 dark:text-gray-400'>OVERVIEW</span>\r\n                    <h3 className='text-2xl font-medium dark:text-white'>Account</h3>\r\n                </div>\r\n                <div className=\"sm:w-760 text-sm font-medium text-center text-gray-500 border-b border-gray-200 dark:text-gray-400 dark:border-gray-700\">\r\n                    <ul className=\"flex flex-nowrap overflow-x-auto no-scrollbar -mb-px\">\r\n                        {\r\n                            routes.tabs.map((route) =>\r\n                                <li key={route.id} className=\"mr-2\">\r\n                                    <NavLink\r\n                                        to={`/${route.path}`}>\r\n                                        <span className={classNames(\"text-sm inline-block p-4 border-b-2 rounded-t-lg whitespace-nowrap\",\r\n                                            isActive(route.path) ? \"active text-brand-100 border-brand-100 dark:text-white dark:border-brand-100\"\r\n                                                : \"border-transparent hover:text-gray-600 hover:border-gray-300 dark:hover:text-gray-300\"\r\n                                        )}>{route.name}</span>\r\n                                    </NavLink>\r\n                                </li>\r\n                            )}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default TabPanel;","import { Toast } from \"components/common/alerts\";\r\nimport apiSlice from \"state/api\";\r\nimport { SetLoadingWithResults } from \"helpers\";\r\n\r\nconst tagApiSlice = apiSlice.injectEndpoints({\r\n    endpoints: builder => ({\r\n        getTagDetails: builder.query({\r\n            query: (TagId = 0) => `tags/getTagDetails/${TagId}`,\r\n            async onQueryStarted(args, { queryFulfilled, dispatch }) {\r\n                try {\r\n                    await SetLoadingWithResults(queryFulfilled, dispatch);\r\n                } catch (err) {\r\n                    return;\r\n                }\r\n            },\r\n            transformResponse: (response) => response.success ? response.tag : [],\r\n            providesTags: [\"Tags\"],\r\n        }),\r\n        createUpadateTags: builder.mutation({\r\n            query: data => ({\r\n                url: \"tags/createUpdateTag\",\r\n                method: \"POST\",\r\n                body: { ...data }\r\n            }),\r\n            async onQueryStarted(args, { queryFulfilled, dispatch }) {\r\n                try {\r\n                    const result = await SetLoadingWithResults(queryFulfilled, dispatch);\r\n                    result.data?.success && Toast.success(result.data?.message);\r\n                } catch (err) {\r\n                    return;\r\n                }\r\n            },\r\n            invalidatesTags: [\"Tags\"],\r\n        }),\r\n        deleteTag: builder.mutation({\r\n            query: data => ({\r\n                url: \"tags/deleteTag\",\r\n                method: \"DELETE\",\r\n                body: { ...data }\r\n            }),\r\n            async onQueryStarted(args, { queryFulfilled, dispatch }) {\r\n                try {\r\n                    const result = await SetLoadingWithResults(queryFulfilled, dispatch);\r\n                    result.data?.success && Toast.success(result.data?.message);\r\n                } catch (err) {\r\n                    return;\r\n                }\r\n            },\r\n            invalidatesTags: [\"Tags\"],\r\n        }),\r\n    }),\r\n    overrideExisting: true\r\n});\r\n\r\nexport const { useGetTagDetailsQuery, useCreateUpadateTagsMutation, useDeleteTagMutation } = tagApiSlice;","import React, { useEffect } from 'react';\r\nimport { useFormik } from \"formik\";\r\nimport InputField from 'components/common/inputs/InputField';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { SubmitButton } from 'components/common/buttons';\r\nimport Dropdown from 'components/common/dropdown';\r\nimport { ResetButton } from 'components/common/buttons';\r\nimport { TagSchema } from 'helpers/validation';\r\nimport { useCreateUpadateTagsMutation, useGetTagDetailsQuery } from 'state/api/tags/tagApi';\r\n\r\nconst TagForm = ({ setShowTagForm }) => {\r\n\r\n    const TagId = new URLSearchParams(useLocation().search).get('tagId');\r\n    const { data: TagInfo, isLoading: isLoadingTag } = useGetTagDetailsQuery(TagId, {\r\n        refetchOnMountOrArgChange: true,\r\n        skip: !TagId\r\n    });\r\n\r\n    const initialValues = TagInfo ? { ...TagInfo } : { TagName: '', TagType: '', TagDesc: '' };\r\n    const { values, errors, touched, isSubmitting, handleChange, handleSubmit, handleBlur, setValues } = useFormik({\r\n        initialValues,\r\n        validationSchema: TagSchema,\r\n        onSubmit: values => {\r\n            submitForm(values);\r\n        },\r\n    });\r\n\r\n    const [createUpadateTags, { isSuccess, data }] = useCreateUpadateTagsMutation();\r\n\r\n    useEffect(() => {\r\n        isSuccess && setShowTagForm(false);\r\n\r\n        //Dynamically Setting the Values of form for Update/Edit Operation of account.\r\n        TagInfo && setValues(initialValues);\r\n        \r\n    }, [isSuccess, data, TagInfo, isLoadingTag, setValues]);\r\n\r\n\r\n    const submitForm = async (formData) => {\r\n        try {\r\n            if (TagId) formData.TagId = TagId;\r\n            await createUpadateTags(formData).unwrap();\r\n        } catch (error) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"grid gap-4 sm:grid-cols-2 sm:gap-6\">\r\n                <div className=\"w-full\">\r\n                    <InputField label={\"Tag Name\"} placeholder={\"Ex.: Setup Created\"} id={\"tag-name\"} type={\"text\"} htmlName={\"TagName\"} value={values.TagName} handleChange={handleChange} onBlur={handleBlur} errorMsg={errors.TagName && touched.TagName && errors.TagName} />\r\n                </div>\r\n                <div className=\"w-full\">\r\n                    <Dropdown label={\"Select Tag Type\"} id={\"ddTags\"} htmlName={\"TagType\"} errorMsg={errors.TagType && touched.TagType && errors.TagType} onChange={handleChange} onBlur={handleBlur} value={values.TagType}\r\n                        children={\r\n                            <>\r\n                                <option>Select Type</option>\r\n                                <option>SETUP</option>\r\n                                <option>MISTAKE</option>\r\n                                <option>CUSTOM</option>\r\n                            </>\r\n                        } />\r\n                </div>\r\n                <div className=\"sm:col-span-2\">\r\n                    <InputField label={\"Description\"} placeholder={\"Add Description\"} id={\"tag-description\"} type={\"text\"} htmlName={\"TagDesc\"} value={values.TagDesc} handleChange={handleChange} onBlur={handleBlur} errorMsg={errors.TagDesc && touched.TagDesc && errors.TagDesc} />\r\n                </div>\r\n                <div className=\"flex flex-row items-center mt-5\">\r\n                    <ResetButton id=\"reset\">Reset</ResetButton>\r\n                    <SubmitButton type=\"submit\" id=\"profileBtn\" disabled={isSubmitting}>Submit</SubmitButton>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TagForm;\r\n","import React, { useState } from 'react';\r\nimport { useNavigate, createSearchParams, } from 'react-router-dom';\r\nimport TabPanel from '../'\r\nimport { IoClose } from \"react-icons/io5\";\r\nimport { SubmitButton } from 'components/common/buttons';\r\nimport { DefaultTable } from 'components/common/table';\r\nimport { TagsColumns } from 'components/common/table/columns';\r\nimport TagForm from './forms/tagFrom';\r\nimport { useDeleteTagMutation, useGetTagDetailsQuery } from 'state/api/tags/tagApi';\r\n\r\nconst Tags = () => {\r\n\r\n  const navigate = useNavigate();\r\n  const [showAddTags, setShowAddTags] = useState(false);\r\n  const { data, isLoading: isLoadingTag } = useGetTagDetailsQuery();\r\n\r\n  const [deleteTag, { isLoading }] = useDeleteTagMutation();\r\n\r\n  const handleDeleteClick = async (TagId) => {\r\n    try {\r\n      await deleteTag({ TagId }).unwrap();\r\n    } catch (error) {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const useNavigateSearch = () => {\r\n    return (pathname, params) =>\r\n      navigate(`${pathname}?${createSearchParams(params)}`);\r\n  };\r\n\r\n  const navigateSearch = useNavigateSearch();\r\n\r\n  return (\r\n    <div>\r\n      <TabPanel />\r\n      <div className=\"flex flex-col justify-center items-center\">\r\n        <div className=\"w-full max-w-3xl p-6 mt-8 space-y-8 sm:p-8 bg-white rounded-lg shadow dark:bg-main-dark\">\r\n          <div className=\"py-8 px-1 max-w-2xl lg:py-2\">\r\n\r\n            {/* Manage Account Section */}\r\n            {!showAddTags &&\r\n              <div className=\"grid gap-4 sm:grid-cols-2 sm:gap-6\">\r\n                <div className=\"w-full\">\r\n                  <h2 className=\"mb-2 sm:mb-2 text-sm font-bold text-gray-900 dark:text-white\">MANAGE TAGS</h2>\r\n                </div>\r\n                <div className=\"w-full flex sm:justify-end sm:items-start\">\r\n                  <SubmitButton id=\"add-account\" onClick={() => {\r\n                    setShowAddTags(!showAddTags)\r\n                    navigate('/settings/tags-mmanagements');\r\n                  }}>+ ADD TAGS</SubmitButton>\r\n                </div>\r\n                <div className=\"sm:col-span-2 relative overflow-x-auto shadow-md sm:rounded-lg\">\r\n                  <DefaultTable\r\n                    data={data || []}\r\n                    columns={TagsColumns}\r\n                    isEdit={true}\r\n                    handleDeleteClick={handleDeleteClick}\r\n                    handleEditClick={(TagId) => {\r\n                      setShowAddTags(true);\r\n                      navigateSearch('/settings/tags-mmanagements', { tagId: TagId });\r\n                    }}\r\n                    Id={'TagId'} />\r\n                </div>\r\n              </div>\r\n            }\r\n\r\n            {/* Add Account Section */}\r\n            {showAddTags &&\r\n              <div>\r\n                <div className='flex justify-between items-center border-b dark:border-gray-600 pb-4 mb-4 sm:mb-5'>\r\n                  <h2 className=\"text-xl font-bold text-gray-900 dark:text-white\">Add Tags</h2>\r\n                  <button className=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ml-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white\" onClick={() => setShowAddTags(!showAddTags)}>\r\n                    <IoClose className=\"w-6 h-6\" />\r\n                  </button>\r\n                </div>\r\n                <TagForm setShowTagForm={setShowAddTags} />\r\n              </div>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tags;\r\n"],"names":["Button","forwardRef","_ref","ref","className","props","_objectWithoutProperties","_excluded","_jsx","_objectSpread","SubmitButton","_ref2","_excluded2","type","DeleteButton","_ref3","_excluded3","ResetButton","_ref4","_excluded4","IconButton","_ref5","_excluded5","label","id","placeholder","disabled","handleChange","htmlName","value","errorMsg","inputClass","_jsxs","_Fragment","children","htmlFor","concat","rows","name","onChange","status","toLowerCase","classNames","startsWith","RecentTradeCols","accessorKey","header","cell","row","getValue","StatusPill","formatDate","_ref6","GetFormatedPnl","_ref7","showPercentage","showCurrency","TradeColumns","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","GetFormatedCurrency","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","AccountColumns","_ref25","_ref26","_ref27","_ref28","TagsColumns","_ref29","_ref30","_ref31","ImportHistColumns","_ref32","_ref33","_ref34","_ref35","_ref36","KeyValueTable","data","map","item","index","key","DefaultTable","columns","isEdit","handleClick","handleEditClick","handleDeleteClick","Id","table","useReactTable","getCoreRowModel","getHeaderGroups","headerGroup","headers","isPlaceholder","flexRender","column","columnDef","getContext","scope","getRowModel","length","i","onClick","_row$original","original","getVisibleCells","_row$original2","MdEdit","_row$original3","MdDeleteOutline","colSpan","_props$value","amount","useSelector","state","account","selectedCurrency","parseFloat","toFixed","_props$value2","_props$showCurrency","_props$showPlusMinus","showPlusMinus","_props$showPercentage","_props$showIcon","showIcon","_props$showBracket","showBracket","currency","conVal","parseInt","output","Math","abs","AiFillCaretDown","AiFillCaretUp","SignUpSchema","Yup","shape","Email","email","required","UserName","min","max","Password","ConfirmPassword","oneOf","SignInSchema","AccountSchema","AccountName","Market","Broker","InitialBalance","positive","integer","Currency","TagSchema","TagName","TagType","TagDesc","TradeSchema","Account","Setup","Symbol","EntryDate","ExitDate","EntryPrice","ExitPrice","StopLoss","Quantity","location","useLocation","routes","tabs","route","NavLink","to","path","routeName","pathname","includes","tagApiSlice","apiSlice","injectEndpoints","endpoints","builder","getTagDetails","query","arguments","undefined","onQueryStarted","args","_asyncToGenerator","_regeneratorRuntime","mark","_callee","queryFulfilled","dispatch","wrap","_context","prev","next","SetLoadingWithResults","t0","abrupt","stop","transformResponse","response","success","tag","providesTags","createUpadateTags","mutation","url","method","body","_callee2","_result$data","_result$data2","result","_context2","sent","Toast","message","invalidatesTags","deleteTag","_callee3","_result$data3","_result$data4","_context3","overrideExisting","useGetTagDetailsQuery","useCreateUpadateTagsMutation","useDeleteTagMutation","setShowTagForm","TagId","URLSearchParams","search","get","_useGetTagDetailsQuer","refetchOnMountOrArgChange","skip","TagInfo","isLoadingTag","isLoading","initialValues","_useFormik","useFormik","validationSchema","onSubmit","values","submitForm","errors","touched","isSubmitting","handleSubmit","handleBlur","setValues","_useCreateUpadateTags","_useCreateUpadateTags2","_slicedToArray","_useCreateUpadateTags3","isSuccess","useEffect","formData","unwrap","_x","apply","InputField","onBlur","Dropdown","navigate","useNavigate","_useState","useState","_useState2","showAddTags","setShowAddTags","_useDeleteTagMutation","_useDeleteTagMutation2","navigateSearch","params","createSearchParams","TabPanel","tagId","IoClose","TagForm"],"sourceRoot":""}