{"version":3,"file":"static/js/772.9e4f49df.chunk.js","mappings":"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","sources":["components/common/checkbox/index.jsx","components/common/stats/index.jsx","components/common/statusPill/index.jsx","components/common/table/data-table/data-table-pagination.jsx","components/common/table/data-table/index.jsx","helpers/format.js","components/common/table/data-table/columns.jsx","pages/trades/TradeStatistics/index.jsx"],"sourcesContent":["import React, { forwardRef } from \"react\"\r\n\r\nconst Checkbox = forwardRef(({ className, ...props }, ref) => (\r\n    <input\r\n        type=\"checkbox\"\r\n        className=\"w-4 h-4 text-primary-100 focus:ring-primary-100 bg-gray-100 border-gray-300 rounded dark:bg-gray-700 dark:border-gray-600\"\r\n        ref={ref}\r\n        {...props}>\r\n    </input>\r\n))\r\n\r\nexport default Checkbox;\r\n","import { GetFormatedCurrency, GetFormatedPnl } from 'helpers/format';\r\nimport React from 'react';\r\nimport { AiOutlineLineChart } from \"react-icons/ai\";\r\nimport { LuDollarSign } from \"react-icons/lu\";\r\nimport { MdOutlineBarChart } from \"react-icons/md\";\r\nimport { PiChartLineUpBold } from \"react-icons/pi\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Statistics = () => {\r\n\r\n  const data = useSelector((state) => state.account?.stats, []);\r\n\r\n  return (\r\n    <div className=\"grid grid-rows-1 gap-7 mb-8 lg:grid-cols-4\">\r\n      <div className=\"flex flex-row justify-between h-24 rounded-md border border-gray-200 dark:border-gray-900 shadow-sm bg-white dark:bg-main-dark\">\r\n        <div className=\"ml-4 flex h-[90px] w-auto flex-row items-center\">\r\n          <div className=\"h-50 ml-3 flex w-auto flex-col justify-center\">\r\n            <p className=\"font-dm text-xs font-medium text-gray-400 mb-1\">Total Revenue</p>\r\n            <h4 className=\"text-xl font-medium dark:text-white\"><GetFormatedCurrency value={data?.totalRevenue} /></h4>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex item-center rounded-full p-3 mr-3 dark:bg-navy-700\">\r\n          <span className=\"flex items-center text-brand-500 dark:text-white\">\r\n            <AiOutlineLineChart className=\"w-7 h-7 text-gray-400\" />\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex flex-row justify-between h-24 rounded-md border border-gray-200 dark:border-gray-900 shadow-sm bg-white dark:bg-main-dark\">\r\n        <div className=\"ml-4 flex h-[90px] w-auto flex-row items-center\">\r\n          <div className=\"ml-3 flex w-auto flex-col justify-center\">\r\n            <p className=\"font-dm text-xs font-medium text-gray-400 mb-1\">Total PnL</p>\r\n            <h4 className=\"flex items-center text-xl font-medium dark:text-white\"><GetFormatedPnl value={data?.totalPnl} /></h4>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex item-center rounded-full p-3 mr-3 dark:bg-navy-700\">\r\n          <span className=\"flex items-center text-brand-500 dark:text-white\">\r\n            <LuDollarSign className=\"w-7 h-7 text-gray-400\" />\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex flex-row justify-between h-24 rounded-md border border-gray-200 dark:border-gray-900 shadow-sm bg-white dark:bg-main-dark\">\r\n        <div className=\"ml-4 flex h-[90px] w-auto flex-row items-center\">\r\n          <div className=\"h-50 ml-3 flex w-auto flex-col justify-center\">\r\n            <p className=\"font-dm text-xs font-medium text-gray-400 mb-1\">Winrate</p>\r\n            <h4 className=\"text-xl font-medium dark:text-white\">{data?.winrate || 0}%</h4>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex item-center rounded-full p-3 mr-3 dark:bg-navy-700\">\r\n          <span className=\"flex items-center text-brand-500 dark:text-white\">\r\n            <PiChartLineUpBold className=\"w-7 h-7 text-gray-400\" />\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex flex-row justify-between h-24 rounded-md border border-gray-200 dark:border-gray-900 shadow-sm bg-white dark:bg-main-dark\">\r\n        <div className=\"ml-4 flex h-[90px] w-auto flex-row items-center\">\r\n          <div className=\"h-50 ml-3 flex w-auto flex-col justify-center\">\r\n            <p className=\"font-dm text-xs font-medium text-gray-400 mb-1\">Total Trades</p>\r\n            <h4 className=\"text-xl font-medium dark:text-white\">{data?.totalTrades || 0}</h4>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex item-center rounded-full p-3 mr-3 dark:bg-navy-700\">\r\n          <span className=\"flex items-center text-brand-500 dark:text-white\">\r\n            <MdOutlineBarChart className=\"w-7 h-7 text-gray-400\" />\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Statistics;\r\n","import React from 'react'\r\nimport { classNames } from \"utils\";\r\n\r\nconst StatusPill = (props) => {\r\n    const { value } = props;\r\n    const status = value?.toLowerCase() || '';\r\n\r\n    return (\r\n        <span\r\n            className={\r\n                classNames(\r\n                    \"px-3 py-1 uppercase leading-wide font-bold text-xs rounded-xl shadow-sm\",\r\n                    status.startsWith(\"win\") ? \"border-2 border-green text-green\" : null,\r\n                    status.startsWith(\"pending\") ? \"bg-yellow-100 text-yellow-800\" : null,\r\n                    status.startsWith(\"loss\") ? \"border-2 border-red text-red\" : null,\r\n                )\r\n            }\r\n        >\r\n            {status}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default StatusPill;\r\n","import { BiChevronLeft, BiChevronsLeft, BiChevronRight, BiChevronsRight } from 'react-icons/bi';\r\n\r\n\r\nexport function DataTablePagination({ table }) {\r\n    const buttonClass = \"p-1 border rounded-md shadow-sm border-gray-300 dark:border-gray-500 px-2 disabled:opacity-50 hover:bg-gray-200 dark:hover:bg-main-dark-bg disabled:pointer-events-none disabled:opacity-50\";\r\n    return (\r\n        <div className=\"flex flex-col space-y-3 sm:flex-row justify-end items-center sm:space-x-6 pt-3\">\r\n            <select\r\n                value={table.getState().pagination.pageSize}\r\n                onChange={(e) => {\r\n                    table.setPageSize(Number(e.target.value));\r\n                }}\r\n                className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg block mt-3 p-1.5 pr-8 pl-3 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white\">\r\n                {[5, 10, 20, 30, 50].map((pageSize) => (\r\n                    <option key={pageSize} value={pageSize}>\r\n                        Show {pageSize}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n            <span className=\"flex items-center gap-1\">\r\n                <div>Page</div>\r\n                <strong>\r\n                    {table.getState().pagination.pageIndex + 1} of{\" \"}\r\n                    {table.getPageCount()}\r\n                </strong>\r\n            </span>\r\n            <div className=\"flex items-center space-x-2\">\r\n                <button\r\n                    onClick={() => table.setPageIndex(0)}\r\n                    disabled={!table.getCanPreviousPage()}\r\n                    className={buttonClass}>\r\n                    <BiChevronsLeft className=\"w-5 h-5\" />\r\n                </button>\r\n                <button\r\n                    onClick={() => {\r\n                        table.previousPage();\r\n                    }}\r\n                    disabled={!table.getCanPreviousPage()}\r\n                    className={buttonClass}>\r\n                    <BiChevronLeft className=\"w-5 h-5\" />\r\n                </button>\r\n                <button\r\n                    onClick={() => {\r\n                        table.nextPage();\r\n                    }}\r\n                    disabled={!table.getCanNextPage()}\r\n                    className={buttonClass}>\r\n                    <BiChevronRight className=\"w-5 h-5\" />\r\n                </button>\r\n                <button\r\n                    onClick={() => table.setPageIndex(table.getPageCount() - 1)}\r\n                    disabled={!table.getCanNextPage()}\r\n                    className={buttonClass}>\r\n                    <BiChevronsRight className=\"w-5 h-5\" />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { flexRender, getCoreRowModel, getFilteredRowModel, getPaginationRowModel, getSortedRowModel, useReactTable } from \"@tanstack/react-table\";\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate, createSearchParams } from 'react-router-dom';\r\nimport { DataTablePagination } from \"./data-table-pagination\";\r\nimport { MdDeleteOutline, MdEdit } from \"react-icons/md\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDeleteTradeMutation } from \"state/api/trade/tradeApi\";\r\n\r\nconst TradeTable = (props) => {\r\n\r\n    const { data, columns, pagination, isEdit } = props;\r\n\r\n    const [sorting, setSorting] = useState([]);\r\n    const [columnFilters, setColumnFilters] = useState([]);\r\n    const [rowSelection, setRowSelection] = useState({});\r\n\r\n    const table = useReactTable({\r\n        data,\r\n        columns,\r\n        onSortingChange: setSorting,\r\n        onColumnFiltersChange: setColumnFilters,\r\n        getCoreRowModel: getCoreRowModel(),\r\n        getPaginationRowModel: getPaginationRowModel(),\r\n        getSortedRowModel: getSortedRowModel(),\r\n        getFilteredRowModel: getFilteredRowModel(),\r\n        onRowSelectionChange: setRowSelection,\r\n        state: {\r\n            sorting,\r\n            columnFilters,\r\n            rowSelection\r\n        }\r\n    });\r\n\r\n    const navigate = useNavigate();\r\n    const useNavigateSearch = () => {\r\n        return (pathname, params) =>\r\n            navigate(`${pathname}?${createSearchParams(params)}`);\r\n    };\r\n    const navigateSearch = useNavigateSearch();\r\n\r\n    const id = useSelector((state) => state.account?.selectedAccount?.AccountId);\r\n\r\n    const [deleteTrade, { isLoading: isLoadingDelete }] = useDeleteTradeMutation();\r\n    const handleDeleteClick = async (TradeId) => {\r\n        try {\r\n            await deleteTrade({ AccountId: id, TradeId }).unwrap();\r\n        } catch (error) {\r\n            return;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"relative overflow-x-auto no-scrollbar shadow-md dark:shadow-2xl sm:rounded-md\">\r\n                <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\r\n                    <thead className=\"text-md text-gray-700 uppercase bg-gray-200 dark:bg-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600\">\r\n                        {table.getHeaderGroups().map(headerGroup => (\r\n                            <tr key={headerGroup.id}>\r\n                                {headerGroup.headers.map(header => {\r\n                                    return (\r\n                                        <th key={header.id} className=\"capitalize px-6 py-3 whitespace-nowrap\">\r\n                                            {header.isPlaceholder\r\n                                                ? null\r\n                                                : flexRender(\r\n                                                    header.column.columnDef.header,\r\n                                                    header.getContext()\r\n                                                )}\r\n                                        </th>\r\n                                    )\r\n                                })}\r\n                                {isEdit && <th scope=\"col\" className=\"capitalize px-6 py-3 text-center whitespace-nowrap\"></th>}\r\n                            </tr>\r\n                        ))}\r\n                    </thead>\r\n                    <tbody>\r\n                        {table.getRowModel().rows.length ? (\r\n                            table.getRowModel().rows.map((row, i) => (\r\n                                <tr\r\n                                    key={row.id}\r\n                                    onClick={() => navigateSearch('/tracking', { id: row?.original?.TradeId })}\r\n                                    className={`border-b dark:border-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 cursor-pointer ${i % 2 === 0 ? \"bg-white dark:bg-main-dark\" : \"bg-gray-100 dark:bg-primary-dark\"}`}>\r\n                                    {row.getVisibleCells().map((cell) => (\r\n                                        <td key={cell.id} className=\"px-6 py-4 whitespace-nowrap\">\r\n                                            {flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n                                        </td>\r\n                                    ))}\r\n\r\n                                    {isEdit &&\r\n                                        <td className=\"py-4 px-4 w-24 flex items-center justify-between whitespace-nowrap\" onClick={(e) => e.stopPropagation()}>\r\n                                            <button className=\"font-medium text-gray-900 dark:text-white hover:underline\" onClick={() => navigateSearch('/add-Trade', { id: row?.original?.TradeId })}><MdEdit className=\"w-5 h-5\" /></button>\r\n                                            <button className=\"font-medium text-red-600 dark:text-red-500 hover:underline\" onClick={() => handleDeleteClick(row?.original?.TradeId)}><MdDeleteOutline className=\"w-5 h-5\" /></button>\r\n                                        </td>\r\n                                    }\r\n                                </tr>\r\n                            ))\r\n                        ) : (\r\n                            <tr className=\"text-center h-32\">\r\n                                <td colSpan={12}>No Record Found!</td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            {pagination && <DataTablePagination table={table} />}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TradeTable;","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { AiFillCaretUp, AiFillCaretDown } from \"react-icons/ai\";\r\n\r\nexport const GetFormatedCurrency = (props) => {\r\n    const { value = 0 } = props;\r\n    const currency = useSelector((state) => state.account.selectedCurrency, []) || '';\r\n    const amount = currency + parseFloat(value).toFixed(2);\r\n\r\n    return (\r\n        <>\r\n            {amount}\r\n        </>\r\n    )\r\n}\r\n\r\nexport const GetFormatedPnl = (props) => {\r\n\r\n    const { value = 0, showCurrency = true, showPlusMinus = true, showPercentage = false, showIcon = false, showBracket = false } = props;\r\n    const currency = useSelector((state) => state.account.selectedCurrency, []) || '';\r\n\r\n    const conVal = parseInt(value);\r\n    const sign = showPlusMinus ? (conVal > 0 ? '+' : conVal < 0 ? '-' : '') : '';\r\n    const output = sign + ((showCurrency && !showPercentage) ? currency : '') + (Math.abs(parseFloat(value)).toFixed(2)) + (showPercentage ? '%' : '');\r\n\r\n    return (\r\n        <>\r\n            {showIcon ? (\r\n                conVal < 0 ? <AiFillCaretDown className=\"text-red mr-1\" /> : <AiFillCaretUp className=\"text-green mr-1\" />\r\n            ) : null}\r\n            <span className={conVal < 0 ? \"text-red\" : conVal > 0 ? \"text-green\" : 'dark:text-white'}>\r\n                {showBracket ? ('(' + output + ')') : output}\r\n            </span>\r\n        </>\r\n    )\r\n}\r\n","import { classNames } from \"utils\";\r\nimport { RiArrowUpDownLine } from 'react-icons/ri';\r\nimport { FaArrowUp, FaArrowDown } from 'react-icons/fa6';\r\nimport Checkbox from \"components/common/checkbox\";\r\nimport StatusPill from \"components/common/statusPill\";\r\nimport { formatDate } from \"utils/index\";\r\nimport { GetFormatedCurrency, GetFormatedPnl } from \"helpers/format\";\r\n\r\nexport const TradeColumns = [\r\n    {\r\n        id: \"select\",\r\n        header: ({ table }) => (\r\n            <Checkbox\r\n                checked={table.getIsAllPageRowsSelected()}\r\n                onChange={table.getToggleAllRowsSelectedHandler()}\r\n                aria-label=\"Select all\"\r\n            />\r\n        ),\r\n        cell: ({ row }) => (\r\n            <Checkbox\r\n                checked={row.getIsSelected()}\r\n                onChange={row.getToggleSelectedHandler()}\r\n                aria-label=\"Select row\"\r\n            />\r\n        ),\r\n        enableSorting: false,\r\n        enableHiding: false\r\n    },\r\n    {\r\n        accessorKey: \"Symbol\",\r\n        header: () => <span>Symbol</span>,\r\n        cell: ({ row }) => <div className=\"uppercase\">{row.getValue(\"Symbol\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"TradeStatus\",\r\n        header: ({ column }) => {\r\n            return (\r\n                <button\r\n                    className=\"flex items-center justify-center\"\r\n                    variant=\"ghost\"\r\n                    onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\r\n                >\r\n                    Status\r\n                    {column.getIsSorted() === \"desc\" ? (\r\n                        <FaArrowDown className=\"ml-2 w-4 h-4\" />\r\n                    ) : column.getIsSorted() === \"asc\" ? (\r\n                        <FaArrowUp className=\"ml-2 w-4 h-4\" />\r\n                    ) : (\r\n                        <RiArrowUpDownLine className=\"ml-2 h-4 w-4\" />\r\n                    )}\r\n                </button>\r\n            )\r\n        },\r\n        cell: ({ row }) => (\r\n            <div className=\"uppercase\">\r\n                <StatusPill value={row.getValue(\"TradeStatus\")} />\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        accessorKey: \"EntryDate\",\r\n        header: () => <div className=\"capitalize\">Open Date</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{formatDate(row.getValue(\"EntryDate\"), 'dd/mm/yyyy')}</div>\r\n    },\r\n    {\r\n        accessorKey: \"ExitDate\",\r\n        header: () => <div className=\"capitalize\">Close Date</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{formatDate(row.getValue(\"ExitDate\"), 'dd/mm/yyyy')}</div>\r\n    },\r\n    {\r\n        accessorKey: \"Action\",\r\n        header: () => <div className=\"capitalize\">Action</div>,\r\n        cell: ({ row }) => <div className=\"uppercase\">{row.getValue(\"Action\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"NetPnL\",\r\n        header: () => <div className=\"capitalize\">Net P&L</div>,\r\n        cell: ({ row }) => <div className=\"flex items-center capitalize font-medium\"><GetFormatedPnl value={row.getValue(\"NetPnL\")} /></div>\r\n    },\r\n    {\r\n        accessorKey: \"NetRoi\",\r\n        header: () => <div className=\"capitalize\">Net ROI</div>,\r\n        cell: ({ row }) => <div className=\"flex items-center capitalize font-medium\"><GetFormatedPnl value={row.getValue(\"NetRoi\")} showPercentage={true} /></div>\r\n    },\r\n    {\r\n        accessorKey: \"EntryPrice\",\r\n        header: () => <div className=\"capitalize\">Entry Price</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\"><GetFormatedCurrency value={row.getValue(\"EntryPrice\")} /></div>\r\n    },\r\n    {\r\n        accessorKey: \"ExitPrice\",\r\n        header: () => <div className=\"capitalize\">Exit Price</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\"><GetFormatedCurrency value={row.getValue(\"ExitPrice\")} /></div>\r\n    },\r\n    {\r\n        accessorKey: \"StopLoss\",\r\n        header: () => <div className=\"capitalize\">Stop Loss</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\"><GetFormatedCurrency value={row.getValue(\"StopLoss\")} /></div>\r\n    },\r\n    {\r\n        accessorKey: \"Quantity\",\r\n        header: () => <div className=\"capitalize\">Quantity</div>,\r\n        cell: ({ row }) => <div className=\"capitalize font-medium\">{row.getValue(\"Quantity\").toFixed(2)}</div>\r\n    },\r\n    {\r\n        accessorKey: \"Setup\",\r\n        header: () => <div className=\"capitalize\">Setup</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"Setup\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"EntryReason\",\r\n        header: () => <div className=\"capitalize\">Entry Reason</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"EntryReason\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"ExitReason\",\r\n        header: () => <div className=\"capitalize\">Exit Reason</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"ExitReason\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"Emotions\",\r\n        header: () => <div className=\"capitalize\">Emotions</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"Emotions\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"MarketCondition\",\r\n        header: () => <div className=\"capitalize\">Market Condition</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"MarketCondition\")}</div>\r\n    },\r\n    {\r\n        accessorKey: \"AdditionalInfo\",\r\n        header: () => <div className=\"capitalize\">Additional Info</div>,\r\n        cell: ({ row }) => <div className=\"capitalize\">{row.getValue(\"AdditionalInfo\")}</div>\r\n    },\r\n]","import React from 'react';\r\nimport TradeTable from 'components/common/table/data-table';\r\nimport { useGetTradeStatisticsQuery } from 'state/api/trade/tradeApi';\r\nimport { useSelector } from 'react-redux';\r\nimport Statistics from 'components/common/stats';\r\nimport { TradeColumns } from 'components/common/table/data-table/columns';\r\n\r\nconst TradeStatistics = () => {\r\n\r\n    const id = useSelector((state) => state.account?.selectedAccount?.AccountId);\r\n    const { data, isLoading } = useGetTradeStatisticsQuery({ id }, {\r\n        refetchOnMountOrArgChange: true,\r\n        skip: !id\r\n    });\r\n\r\n    return (\r\n        <section className='h-full my-4 mt-8 lg:my-4'>\r\n            <Statistics />\r\n            <div className=\"bg-white dark:bg-main-dark h-full p-2 mt-2\">\r\n                <div className=\"p-2 mx-auto dark:text-white dark:fill-gray-400\">\r\n                    <TradeTable\r\n                        data={data || []}\r\n                        columns={TradeColumns}\r\n                        pagination={true}\r\n                        isEdit={true} />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default TradeStatistics;"],"names":["Checkbox","forwardRef","_ref","ref","className","props","_objectWithoutProperties","_excluded","_jsx","_objectSpread","type","data","useSelector","state","_state$account","account","stats","_jsxs","children","GetFormatedCurrency","value","totalRevenue","AiOutlineLineChart","GetFormatedPnl","totalPnl","LuDollarSign","winrate","PiChartLineUpBold","totalTrades","MdOutlineBarChart","status","toLowerCase","classNames","startsWith","DataTablePagination","table","buttonClass","getState","pagination","pageSize","onChange","e","setPageSize","Number","target","map","pageIndex","getPageCount","onClick","setPageIndex","disabled","getCanPreviousPage","BiChevronsLeft","previousPage","BiChevronLeft","nextPage","getCanNextPage","BiChevronRight","BiChevronsRight","columns","isEdit","_useState","useState","_useState2","_slicedToArray","sorting","setSorting","_useState3","_useState4","columnFilters","setColumnFilters","_useState5","_useState6","rowSelection","setRowSelection","useReactTable","onSortingChange","onColumnFiltersChange","getCoreRowModel","getPaginationRowModel","getSortedRowModel","getFilteredRowModel","onRowSelectionChange","navigate","useNavigate","navigateSearch","pathname","params","concat","createSearchParams","id","_state$account$select","selectedAccount","AccountId","_useDeleteTradeMutati","useDeleteTradeMutation","_useDeleteTradeMutati2","deleteTrade","handleDeleteClick","isLoading","_asyncToGenerator","_regeneratorRuntime","mark","_callee","TradeId","wrap","_context","prev","next","unwrap","t0","abrupt","stop","_x","apply","arguments","_Fragment","getHeaderGroups","headerGroup","headers","header","isPlaceholder","flexRender","column","columnDef","getContext","scope","getRowModel","rows","length","row","i","_row$original","original","getVisibleCells","cell","stopPropagation","_row$original2","MdEdit","_row$original3","MdDeleteOutline","colSpan","_props$value","amount","selectedCurrency","parseFloat","toFixed","_props$value2","_props$showCurrency","showCurrency","_props$showPlusMinus","showPlusMinus","_props$showPercentage","showPercentage","_props$showIcon","showIcon","_props$showBracket","showBracket","currency","conVal","parseInt","output","Math","abs","AiFillCaretDown","AiFillCaretUp","TradeColumns","checked","getIsAllPageRowsSelected","getToggleAllRowsSelectedHandler","_ref2","getIsSelected","getToggleSelectedHandler","enableSorting","enableHiding","accessorKey","_ref3","getValue","_ref4","variant","toggleSorting","getIsSorted","FaArrowDown","FaArrowUp","RiArrowUpDownLine","_ref5","StatusPill","_ref6","formatDate","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_useGetTradeStatistic","useGetTradeStatisticsQuery","refetchOnMountOrArgChange","skip","Statistics","TradeTable"],"sourceRoot":""}